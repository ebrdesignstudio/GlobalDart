[{"D:\\lak\\globaldart\\src\\index.js":"1","D:\\lak\\globaldart\\src\\reportWebVitals.js":"2","D:\\lak\\globaldart\\src\\App.js":"3","D:\\lak\\globaldart\\src\\Home\\logo.js":"4","D:\\lak\\globaldart\\src\\VisaProcessing\\visaprocessing.js":"5","D:\\lak\\globaldart\\src\\Faq\\faq.js":"6","D:\\lak\\globaldart\\src\\Admission\\admission.js":"7","D:\\lak\\globaldart\\src\\Blog\\blog.js":"8","D:\\lak\\globaldart\\src\\Home\\index.js":"9","D:\\lak\\globaldart\\src\\Home\\navs.js":"10","D:\\lak\\globaldart\\src\\Home\\location.js":"11","D:\\lak\\globaldart\\src\\Home\\contactForm.js":"12","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\nav\\components\\nav.js":"13","D:\\lak\\globaldart\\src\\web-bricks\\lib\\messenger.js":"14","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\form\\components\\form.js":"15","D:\\lak\\globaldart\\src\\web-bricks\\lib\\request.js":"16","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\form\\components\\formMaker.js":"17","D:\\lak\\globaldart\\src\\web-bricks\\config.js":"18","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\htmlInput.js":"19","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\autoComplete.js":"20","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\uploadToFirebase.js":"21","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\switch.js":"22","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\checkbox.js":"23","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\radio.js":"24","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\CheckboxList.js":"25","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\select.js":"26","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\textarea.js":"27","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\button.js":"28","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\textField.js":"29","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\files\\excelToJSON.js":"30","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\customFormHoc.js":"31","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\form\\components\\singleGroupLine.js":"32","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\address.js":"33","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\form\\components\\groupLine.js":"34","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\creatableAutocomplete.js":"35","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\sketchPicker.js":"36","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\chipInput.js":"37","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\hiddenInput.js":"38","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\dateTimePicker.js":"39","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\sharedDataTable.js":"40","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\socialMediaLinks.js":"41","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\rating.js":"42","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\chips.js":"43","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\mapsPicker.js":"44","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\placesPredictions.js":"45","D:\\lak\\globaldart\\src\\web-bricks\\lib\\date.js":"46","D:\\lak\\globaldart\\src\\web-bricks\\lib\\places.js":"47","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\table\\dataGrid.js":"48"},{"size":521,"mtime":1659712504381,"results":"49","hashOfConfig":"50"},{"size":375,"mtime":1659712504381,"results":"51","hashOfConfig":"50"},{"size":1358,"mtime":1659712504085,"results":"52","hashOfConfig":"50"},{"size":459,"mtime":1659712504109,"results":"53","hashOfConfig":"50"},{"size":5902,"mtime":1659712504119,"results":"54","hashOfConfig":"50"},{"size":3299,"mtime":1659712504085,"results":"55","hashOfConfig":"50"},{"size":5902,"mtime":1659712504085,"results":"56","hashOfConfig":"50"},{"size":3936,"mtime":1659712504085,"results":"57","hashOfConfig":"50"},{"size":29800,"mtime":1659775895166,"results":"58","hashOfConfig":"50"},{"size":1306,"mtime":1659712504109,"results":"59","hashOfConfig":"50"},{"size":663,"mtime":1659712504101,"results":"60","hashOfConfig":"50"},{"size":4744,"mtime":1659712504098,"results":"61","hashOfConfig":"50"},{"size":3937,"mtime":1659713141664,"results":"62","hashOfConfig":"50"},{"size":446,"mtime":1659713141739,"results":"63","hashOfConfig":"50"},{"size":8741,"mtime":1659713887138,"results":"64","hashOfConfig":"50"},{"size":1152,"mtime":1659713141739,"results":"65","hashOfConfig":"50"},{"size":3639,"mtime":1659713887139,"results":"66","hashOfConfig":"50"},{"size":48,"mtime":1659713141726,"results":"67","hashOfConfig":"50"},{"size":1524,"mtime":1659713887125,"results":"68","hashOfConfig":"50"},{"size":2929,"mtime":1659713887116,"results":"69","hashOfConfig":"50"},{"size":2907,"mtime":1659713887130,"results":"70","hashOfConfig":"50"},{"size":1136,"mtime":1659713887130,"results":"71","hashOfConfig":"50"},{"size":1518,"mtime":1659713887118,"results":"72","hashOfConfig":"50"},{"size":2488,"mtime":1659713887129,"results":"73","hashOfConfig":"50"},{"size":4263,"mtime":1659713887114,"results":"74","hashOfConfig":"50"},{"size":2583,"mtime":1659713887130,"results":"75","hashOfConfig":"50"},{"size":1733,"mtime":1659713887130,"results":"76","hashOfConfig":"50"},{"size":1613,"mtime":1659713887117,"results":"77","hashOfConfig":"50"},{"size":2281,"mtime":1659713887130,"results":"78","hashOfConfig":"50"},{"size":3296,"mtime":1659713887136,"results":"79","hashOfConfig":"50"},{"size":937,"mtime":1659713141609,"results":"80","hashOfConfig":"50"},{"size":3829,"mtime":1659713887140,"results":"81","hashOfConfig":"50"},{"size":3005,"mtime":1659713887115,"results":"82","hashOfConfig":"50"},{"size":5082,"mtime":1659713887140,"results":"83","hashOfConfig":"50"},{"size":2258,"mtime":1659713887120,"results":"84","hashOfConfig":"50"},{"size":2292,"mtime":1659713887130,"results":"85","hashOfConfig":"50"},{"size":3333,"mtime":1659713887118,"results":"86","hashOfConfig":"50"},{"size":274,"mtime":1659713887124,"results":"87","hashOfConfig":"50"},{"size":2945,"mtime":1659713887123,"results":"88","hashOfConfig":"50"},{"size":1104,"mtime":1659774401287,"results":"89","hashOfConfig":"50"},{"size":2404,"mtime":1659713887130,"results":"90","hashOfConfig":"50"},{"size":1201,"mtime":1659713887129,"results":"91","hashOfConfig":"50"},{"size":2069,"mtime":1659713887119,"results":"92","hashOfConfig":"50"},{"size":2694,"mtime":1659713887125,"results":"93","hashOfConfig":"50"},{"size":4003,"mtime":1659713887128,"results":"94","hashOfConfig":"50"},{"size":2350,"mtime":1659713887160,"results":"95","hashOfConfig":"50"},{"size":6564,"mtime":1659713887161,"results":"96","hashOfConfig":"50"},{"size":613,"mtime":1659713887143,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"1dpskon",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"100"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"100"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"100"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"100"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"100"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"100"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"100"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"100"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"100"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"100"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"100"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"100"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"100"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"100"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"100"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"193","usedDeprecatedRules":"100"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"100"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"100"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"100"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"100"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"100"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"100"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"100"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"100"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"100"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"100"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"226","usedDeprecatedRules":"100"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\lak\\globaldart\\src\\index.js",[],["229","230"],"D:\\lak\\globaldart\\src\\reportWebVitals.js",[],"D:\\lak\\globaldart\\src\\App.js",[],"D:\\lak\\globaldart\\src\\Home\\logo.js",[],"D:\\lak\\globaldart\\src\\VisaProcessing\\visaprocessing.js",["231","232","233"],"import React, { useState } from 'react';\r\nimport Navs from '../Home/navs';\r\nimport { Button } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport _ from 'lodash';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport './styles.css';\r\n\r\nconst VisaProcessing = () => {\r\n   \r\n    const isMobile = window.innerWidth <= 420;\r\n    \r\n\r\n    const assistance = [\r\n        {\r\n            label: 'Courses',\r\n            text: \"Counselling is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book It has survived not only five centuries\",\r\n            icon: require('./../assets/reglobaldartscreens/books-icons.png')\r\n        },\r\n        {\r\n            label: 'Universities',\r\n            text: \"Counselling is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book It has survived not only five centuries\",\r\n            icon: require('./../assets/reglobaldartscreens/course-icons.png')\r\n        },\r\n        {\r\n            label: 'Scholarships',\r\n            text: \"Counselling is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book It has survived not only five centuries\",\r\n            icon: require('./../assets/reglobaldartscreens/savings.png')\r\n        },\r\n        {\r\n            label: 'Academic Profile',\r\n            text: \"Counselling is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book It has survived not only five centuries\",\r\n            icon: require('./../assets/reglobaldartscreens/percentage.png')\r\n        }\r\n    ]\r\n\r\n    const docBlock = (\r\n        <div className=\"services-info\">\r\n            <div className=\"documents margin-t-b-60\">\r\n                <p className=\"font-14 main-blue margin-top-20 bold\">DOCUMENTS REQUIRED</p>\r\n                <p className=\"font-14 margin-t-r-b-l  flex-vc gray-text\"><CheckIcon style={{ width: '16px', height: '16px', paddingRight: '5px' }} className=\"main-blue\" /> Work experience letter</p>\r\n                <p className=\"font-14 margin-t-r-b-l  flex-vc gray-text\"><CheckIcon style={{ width: '16px', height: '16px', paddingRight: '5px' }} className=\"main-blue\" /> Undergraduate Marksheet & degree certificate</p>\r\n                <p className=\"font-14 margin-t-r-b-l  flex-vc gray-text\"><CheckIcon style={{ width: '16px', height: '16px', paddingRight: '5px' }} className=\"main-blue\" /> 12th Marksheets</p>\r\n                <p className=\"font-14 margin-t-r-b-l  flex-vc gray-text\"><CheckIcon style={{ width: '16px', height: '16px', paddingRight: '5px' }} className=\"main-blue\" /> Passport</p>\r\n            </div>\r\n            <div>\r\n                <p className=\"font-34 margin-t-r-b-l\">Want to know more about VISA Process?</p>\r\n                <a className=\"link\" href=\"/#contact\">\r\n                    <Button style={{ color: '#ffff', fontSize: '18px', width: '220px', height: '44px', fontFamily: 'fontSemiBold', backgroundColor: '#c8102e', textTransform: 'capitalize', boxShadow: 'unset', margin: '20px 0px' }} variant=\"contained\">Get in touch</Button>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const rightBlock = (\r\n        <div className=\"right\">\r\n            <p style={{ fontWeight: 'lighter' }} className=\"font-14\">ASSISTANCE IN</p>\r\n            {\r\n                _.map(assistance, assist =>\r\n                    <div className=\"margin-top-20\">\r\n                        <img className=\"icon-size\" src={assist.icon.default} />\r\n                        <p className=\"font-30 semi-bold\">{assist.label}</p><hr></hr>\r\n                        <p className=\"font-14 gray-text\">{assist.text}</p>\r\n                    </div>\r\n\r\n                )\r\n            }\r\n            <p className=\"flex-center gray-text\" style={{ fontSize: 18, padding: '30px 0px', justifyContent: 'flex-end' }}>Proceed to <a href={'/visaprocessing'} className=\"red flex link\" style={{ fontWeight: 600, padding: '0px 5px', fontSize: 20 }}>VISA Processing<ChevronRightIcon /></a></p>\r\n        </div>\r\n    )\r\n\r\n    const leftTopBlock = (\r\n        <div>\r\n            <p className=\"font-44 bold\" style={{ fontFamily: 'Helvetica' }}>VISA Process</p>\r\n            <p className=\"font-20 gray-text margin-t-r-b-l\">Counselling is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book It has survived not only five centuries</p>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className=\"admissions\">\r\n            {/* <Navs /> */}\r\n            <div className=\"admission-process main flex-wrap subPage\">\r\n                {\r\n                    !isMobile ? <div style={{ paddingRight:'50px', marginTop:'50px'}} className=\"flex\">\r\n                        <div style = {{ margin:'20px' }}>\r\n                            {leftTopBlock}\r\n                            {docBlock}\r\n                        </div>\r\n                        {rightBlock}\r\n                    </div> : <div>\r\n                        {leftTopBlock}\r\n                        {rightBlock}\r\n                        {docBlock}\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default VisaProcessing;\r\n","D:\\lak\\globaldart\\src\\Faq\\faq.js",[],"D:\\lak\\globaldart\\src\\Admission\\admission.js",["234","235","236"],"import React, { useState } from 'react';\r\nimport Navs from '../Home/navs';\r\nimport { Button } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport _ from 'lodash';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport './styles.css';\r\n\r\nconst Admission = () => {\r\n   \r\n    const isMobile = window.innerWidth <= 420;\r\n    \r\n\r\n    const assistance = [\r\n        {\r\n            label: 'Courses',\r\n            text: \"Counselling is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book It has survived not only five centuries\",\r\n            icon: require('./../assets/reglobaldartscreens/books-icons.png')\r\n        },\r\n        {\r\n            label: 'Universities',\r\n            text: \"Counselling is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book It has survived not only five centuries\",\r\n            icon: require('./../assets/reglobaldartscreens/course-icons.png')\r\n        },\r\n        {\r\n            label: 'Scholarships',\r\n            text: \"Counselling is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book It has survived not only five centuries\",\r\n            icon: require('./../assets/reglobaldartscreens/savings.png')\r\n        },\r\n        {\r\n            label: 'Academic Profile',\r\n            text: \"Counselling is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book It has survived not only five centuries\",\r\n            icon: require('./../assets/reglobaldartscreens/percentage.png')\r\n        }\r\n    ]\r\n\r\n    const docBlock = (\r\n        <div className=\"services-info\">\r\n            <div className=\"documents margin-t-b-60\">\r\n                <p className=\"font-14 main-blue margin-top-20 bold\">DOCUMENTS REQUIRED</p>\r\n                <p className=\"font-14 margin-t-r-b-l  flex-vc gray-text\"><CheckIcon style={{ width: '16px', height: '16px', paddingRight: '5px' }} className=\"main-blue\" /> Work experience letter</p>\r\n                <p className=\"font-14 margin-t-r-b-l  flex-vc gray-text\"><CheckIcon style={{ width: '16px', height: '16px', paddingRight: '5px' }} className=\"main-blue\" /> Undergraduate Marksheet & degree certificate</p>\r\n                <p className=\"font-14 margin-t-r-b-l  flex-vc gray-text\"><CheckIcon style={{ width: '16px', height: '16px', paddingRight: '5px' }} className=\"main-blue\" /> 12th Marksheets</p>\r\n                <p className=\"font-14 margin-t-r-b-l  flex-vc gray-text\"><CheckIcon style={{ width: '16px', height: '16px', paddingRight: '5px' }} className=\"main-blue\" /> Passport</p>\r\n            </div>\r\n            <div>\r\n                <p className=\"font-34 margin-t-r-b-l\">Want to know more about Admission Process?</p>\r\n                <a className=\"link\" href=\"/#contact\">\r\n                    <Button style={{ color: '#ffff', fontSize: '18px', width: '220px', height: '44px', fontFamily: 'fontSemiBold', backgroundColor: '#c8102e', textTransform: 'capitalize', boxShadow: 'unset', margin: '20px 0px' }} variant=\"contained\">Get in touch</Button>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const rightBlock = (\r\n        <div className=\"right\">\r\n            <p style={{ fontWeight: 'lighter' }} className=\"font-14\">ASSISTANCE IN</p>\r\n            {\r\n                _.map(assistance, assist =>\r\n                    <div className=\"margin-top-20\">\r\n                        <img className=\"icon-size\" src={assist.icon.default} />\r\n                        <p className=\"font-30 semi-bold\">{assist.label}</p><hr></hr>\r\n                        <p className=\"font-14 gray-text\">{assist.text}</p>\r\n                    </div>\r\n\r\n                )\r\n            }\r\n            <p className=\"flex-center gray-text\" style={{ fontSize: 18, padding: '30px 0px', justifyContent: 'flex-end' }}>Proceed to <a href={'/visaprocessing'} className=\"red flex link\" style={{ fontWeight: 600, padding: '0px 5px', fontSize: 20 }}>VISA Processing<ChevronRightIcon /></a></p>\r\n        </div>\r\n    )\r\n\r\n    const leftTopBlock = (\r\n        <div>\r\n            <p className=\"font-44 bold\" style={{ fontFamily: 'Helvetica' }}>Admission Process</p>\r\n            <p className=\"font-20 gray-text margin-t-r-b-l\">Counselling is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book It has survived not only five centuries</p>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className=\"admissions\">\r\n            {/* <Navs /> */}\r\n            <div className=\"admission-process main flex-wrap subPage\">\r\n                {\r\n                    !isMobile ? <div style={{ paddingRight:'50px', marginTop:'50px'}} className=\"flex\">\r\n                        <div style = {{ margin:'20px' }}>\r\n                            {leftTopBlock}\r\n                            {docBlock}\r\n                        </div>\r\n                        {rightBlock}\r\n                    </div> : <div>\r\n                        {leftTopBlock}\r\n                        {rightBlock}\r\n                        {docBlock}\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Admission;\r\n","D:\\lak\\globaldart\\src\\Blog\\blog.js",["237"],"import React, { useState } from 'react';\r\nimport Navs from '../Home/navs';\r\nimport _ from 'lodash';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst Blog = () => {\r\n  const [activeArticleIndex, setActiveArticleIndex] = useState(0);\r\n    const blogs = [\r\n        {\r\n            label: 'Emerging tech',\r\n            date: '23 JAN 2018',\r\n            icon: require('./../assets/educationimage/education.jpg'),\r\n            text: 'Here is our trending technologies based on every year from the past 10 years from basic to high end profession Here is our trending technologies based on every year from the past 10 years from basic to high end profession Here is our trending technologies based on every year from the past 10 years from basic to high end profession ',    \r\n        },\r\n        {\r\n            label: 'First ever automated flight',\r\n            date: '23 JAN 2018',\r\n            icon: require('./../assets/educationimage/education.jpg'),\r\n            text: 'Here is our trending technologies based on every year from the past 10 years from basic to high end profession Here is our trending technologies based on every year from the past 10 years from basic to high end profession',\r\n        },\r\n        {\r\n            label: 'Stock market in 2020',\r\n            date: '23 JAN 2018',\r\n            icon: require('./../assets/educationimage/education.jpg'),\r\n            text: 'Here is our trending technologies based on every year from the past 10 years from basic to high end profession Here is our trending technologies based on every year from the past 10 years from basic to high end profession Here is our trending technologies based on every year from the past 10 years from basic to high end profession '\r\n        },\r\n    ]\r\n    function increment() {\r\n        setActiveArticleIndex((activeArticleIndex + 1 )% blogs.length)\r\n    }\r\n\r\n    const activeArticle = blogs[activeArticleIndex];\r\n   \r\n    return (\r\n        <div className=\"blogs\">\r\n           <Navs /> \r\n           <div className=\"blog main flex-fluid\">\r\n               <div className=\"left\">\r\n                   <div className=\"mobile-blog\">\r\n                   <p className=\"font-44 bold\" style={{ fontFamily:'Helvetica'}}>Reads</p>\r\n                   <div className=\"flex space-btwn\">\r\n                    <p className=\"font-20 gray-text margin-t-r-b-l\">Recent</p>\r\n                    <Button style={{ color:'#c8102e',textTransform:'capitalize'}} onClick={increment} className=\"font-20 margin-t-r-b-l\">Read Next</Button>\r\n                    </div>\r\n                   </div>\r\n                    \r\n                <div className=\"trends margin-t-b-20\">\r\n                    <img style={{ width:'100%'}} src={activeArticle.icon.default}/>\r\n                    <p className=\"font-34 semi-bold\">{activeArticle.label} <span style={{ display:'block' }} className=\"font-12 gray-text margin-t-r-b-l\">{activeArticle.date}</span></p>\r\n                    <p className=\"font-12 semi-bold margin-t-r-b-l\">{activeArticle.text}</p>\r\n                </div>\r\n                </div>\r\n             \r\n                <div className=\"right\" style = {{ backgroundColor:'#E7E7FE', margin: '0px 30px',padding: '50px',maxWidth:'380px'}}>\r\n                    <p style={{ fontWeight: 'lighter'}} className=\"font-14\">SIMILAR</p>\r\n                    {\r\n                        _.map(blogs,(blog,index) =>\r\n                            activeArticleIndex === index ? null : \r\n                            <div className=\"margin-top-20\">\r\n                                <p className=\"font-20 semi-bold no-wrap\">{blog.label}</p>\r\n                                <p className=\"font-12 gray-text\">{blog.date}</p>\r\n                                <p className=\"font-12 gray-text\">{blog.text}</p>\r\n                            </div>    \r\n                        )\r\n                    }\r\n                </div>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blog;\r\n","D:\\lak\\globaldart\\src\\Home\\index.js",["238","239","240","241","242","243","244","245","246","247","248","249","250"],"D:\\lak\\globaldart\\src\\Home\\navs.js",["251","252"],"import React, { Component } from 'react';\r\nimport styles from '../Home/styles.css';\r\nimport sharedStyles from '../Styles/styles.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport _ from 'lodash';\r\n\r\nclass Navs extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.navItems = [\r\n            {label: 'Home',link:'/'},\r\n            {label: 'Admissions',link:'/admissions'},\r\n            // {label: 'Events',link:'/events'},\r\n            {label: 'FAQ',link: '/faq'},\r\n            {label: 'Blog',link:'/blog'},\r\n            {label: 'Contact', link: '#contact'}\r\n        ]\r\n    }\r\n\r\n    wrapInLink = (child, nav) => {\r\n        return <a style={{ textDecoration:'none'}} href={nav.link}>{child}</a>\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ background: 'transparent', position:'fixed', minWidth:'100%'}} className=\"nav\">\r\n                {\r\n                    _.map(this.navItems, nav => {\r\n                        const button = <Button onClick={nav.onClick} className=\"nav-mobile\" style={{ textTransform : 'capitalize', fontSize: 14, color:'white' }}>{nav.label}</Button>\r\n                        return nav.link ? this.wrapInLink(button, nav) : button;\r\n                    })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navs;\r\n","D:\\lak\\globaldart\\src\\Home\\location.js",["253"],"import React, { Component } from 'react';\r\n\r\nexport class MapContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"maps\">\r\n                <p className=\"main-blue-maps page-header main-blue\"><span className = \" bold\">Get in touch</span> with Global dart</p>\r\n                <iframe className=\"maps-iframe\" width=\"100%\" height=\"100%\" frameborder=\"0\"\r\n                    src=\"https://www.google.com/maps/embed/v1/place?q=place_id:ChIJG9OI51gVrjsRHlXiBwIJbaA&key=AIzaSyD_orz9B9-WaJm7fmknQpdthqsjKRJRJPs\"  allowfullscreen>\r\n                </iframe>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default  MapContainer\r\n\r\n","D:\\lak\\globaldart\\src\\Home\\contactForm.js",["254","255","256","257","258","259","260","261"],"import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { InputLabel, Button } from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Checkbox } from '@material-ui/core';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Form from '../web-bricks/Shared/form/components/form';\r\nimport sendMessage from '../web-bricks/lib/messenger'\r\n\r\n\r\nclass ContactForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            name: '',\r\n            contactNumber: '',\r\n            message: '',\r\n            key: 0\r\n        }\r\n    }\r\n\r\n    handleSubmit = async (values) => {\r\n        try {\r\n            await sendMessage({ ...values, to: '9597468489'});\r\n        }\r\n        catch (e) {\r\n        }\r\n        values.onSuccess()\r\n        this.setState({\r\n            key: this.state.key + 1\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div key={this.state.key} className=\"contact_form\" style={{  maxWidth:'85%',margin:'30px auto'}}>\r\n                <Form\r\n                    title=\"Send us a message\"\r\n                    submitButton={{\r\n                        label: 'Send now'\r\n                    }}\r\n                    onSubmit={this.handleSubmit}\r\n                    formMaker={{\r\n                        list: [{\r\n                            type: 'textField',\r\n                            props: {\r\n                                name: \"name\",\r\n                                fullWidth: true,\r\n                                label: \"Name\",\r\n                                required: true,\r\n                            }\r\n                        }, {\r\n                            type: 'textField',\r\n                            props: {\r\n                                name: \"phone\",\r\n                                fullWidth: true,\r\n                                required: true,\r\n                                label: \"Phone Number\",\r\n                            }\r\n                        }, {\r\n                            type: 'textField',\r\n                            props: {\r\n                                name: \"message\",\r\n                                fullWidth: true,\r\n                                required: true,\r\n                                label: \"Message\",\r\n                                multiline: true,\r\n                                rows: 4\r\n                            }\r\n                        }]\r\n                    }}\r\n                />\r\n                {/* <form className=\"form flex-column\" onSubmit={this.handleSubmit} style={{ flex: 1}}> */}\r\n                {/* <TextField \r\n                        \r\n                        id = \"name\"\r\n                        type = \"text\"\r\n                        value = {this.state.name}\r\n                        style={{ flex: '0 0 15%'}}\r\n                        onChange = { (e) => this.setState({name:e.target.value})}\r\n                    /> */}\r\n                {/* <TextField \r\n                        name = \"contact number\"\r\n                        label = \"Contact Number\"\r\n                        id = \"contact number\"\r\n                        type = \"tel\"\r\n                        value = {this.state.contactNumber}\r\n                        onChange = { (e) => this.setState({contactNumber:e.target.value})}\r\n                    />\r\n                    <TextField \r\n                        name = \"message\"\r\n                        label = \"Message\"\r\n                        id = \"message\"\r\n                        type = \"text\"\r\n                        value = {this.state.message}\r\n                        onChange = { (e) => this.setState({message:e.target.value})}\r\n                    /> */}\r\n                {/* <FormControl>\r\n                        <InputLabel>Required</InputLabel>\r\n                        <Select\r\n                            id = \"required\"\r\n                            value = \"Required\"\r\n                            fullWidth\r\n                        >\r\n                        <MenuItem value = \"\">\r\n                        </MenuItem>\r\n                        <MenuItem>Required</MenuItem>\r\n                        <MenuItem>Courses</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControlLabel control = {<Checkbox name = \"terms and conditions\"/>}label=\"I agree to terms and conditions\"/>\r\n                    <Button type = \"submit\" color = \"secondary\">Send</Button>\r\n                </form> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactForm;\r\n","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\nav\\components\\nav.js",[],"D:\\lak\\globaldart\\src\\web-bricks\\lib\\messenger.js",["262"],"import request from './request';\r\n\r\nconst sendMessage = async (payload) => {\r\n\r\n    const res = await request.post('https://visitorupdates-4726.twil.io', {\r\n        To: `+91${payload.to}`,\r\n        Body: `Greetings from eyebrowraise studio! ${payload.name} (phone: ${payload.phone}) is enquiring about details. Message: ${payload.message}. Please reach out. Thanks.`,\r\n    }, {\r\n        absoluteUrl: true\r\n    })\r\n}\r\n\r\nexport default sendMessage;","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\form\\components\\form.js",["263"],"import Formsy from \"formsy-react\";\r\nimport _ from \"lodash\";\r\nimport React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { CircularProgress, Button, Typography } from \"@material-ui/core\";\r\nimport FormMaker from \"./formMaker\";\r\nimport { addValidationRule } from \"formsy-react\";\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isValid: _.get(props.submitButton, \"disabled\"),\r\n      refreshKey: 0\r\n    };\r\n    this.form = React.createRef();\r\n    addValidationRule(\"isNotEmpty\", function (values, value, array) {\r\n      return value && value.length > 0;\r\n    });\r\n  }\r\n\r\n  reset = () => {\r\n    this.form.current.reset();\r\n    this.setState({\r\n      refreshKey: this.state.refreshKey+1\r\n    })\r\n  };\r\n\r\n  onInvalid = () => {\r\n    this.setState({\r\n      isValid: false,\r\n    });\r\n    this.props.onInvalid();\r\n  };\r\n\r\n  onValid = () => {\r\n    this.setState({\r\n      isValid: true,\r\n    });\r\n    this.props.onValid();\r\n  };\r\n\r\n  onChange = (values) => {\r\n    this.setState({\r\n      currentValues: values,\r\n    });\r\n    this.props.onChange(values);\r\n  };\r\n\r\n  onSubmit = async (values) => {\r\n    // if submiting already, dont submit again\r\n    if (this.state.isSubmitting) return;\r\n\r\n    this.setState({\r\n      isSubmitting: true,\r\n    });\r\n\r\n    const defaultModel = this.props.defaultModel;\r\n    let changedValues = values;\r\n\r\n    if (defaultModel) {\r\n      changedValues = _.pickBy(\r\n        values,\r\n        (value, key) => !_.isEqual(value, defaultModel[key])\r\n      );\r\n    }\r\n\r\n    this.props.onSubmit(\r\n      {\r\n        ...values,\r\n        onSuccess: () => {\r\n          this.setState({\r\n            isSubmitting: false,\r\n          });\r\n        },\r\n        onError: () => {\r\n          this.setState({\r\n            isSubmitting: false,\r\n          });\r\n        },\r\n      },\r\n      values,\r\n      changedValues,\r\n      this\r\n    );\r\n  };\r\n\r\n  submit = () => {\r\n    this.form.current.submit();\r\n  };\r\n\r\n  getRequiredFields = () => {\r\n    const formInputList = _.get(this.props.formMaker, \"list\");\r\n\r\n    if (formInputList) {\r\n      return _.filter(formInputList, \"props.required\");\r\n    }\r\n    return [];\r\n  };\r\n\r\n  getIncompleteFields = () => {\r\n    if (!this.form.current) return;\r\n    const model = this.form.current.getModel();\r\n    const requiredFields = this.getRequiredFields();\r\n    const incompleteFields = _.filter(requiredFields, (field) =>\r\n      _.isEmpty(_.get(model, field.props.name))\r\n    );\r\n    return incompleteFields;\r\n  };\r\n\r\n  getModel = () => this.form.current.getModel()\r\n\r\n  render() {\r\n    const incompleteFields = this.getIncompleteFields();\r\n    return (\r\n      <div key={this.state.refreshKey} className={classNames(\"form-container\", this.props.className)}>\r\n        <Formsy\r\n          onValid={this.onValid}\r\n          onInvalid={this.onInvalid}\r\n          onSubmit={this.onSubmit}\r\n          onChange={this.onChange}\r\n          ref={this.form}\r\n        >\r\n          {this.props.title && (\r\n            <div\r\n              className={classNames(\r\n                \"margin-t-b-10 form-header\",\r\n                this.props.titleClassName,\r\n                { \"text-center\": this.props.centeredHead }\r\n              )}\r\n            >\r\n              <div className=\"margin-l-r-10\">\r\n                <Typography variant=\"h4\">{this.props.title}</Typography>\r\n              </div>\r\n              {this.props.caption && (\r\n                <p className=\"grey-text form__caption small-title margin-t-b-10 \">\r\n                  {this.props.caption}\r\n                </p>\r\n              )}\r\n            </div>\r\n          )}\r\n          <div\r\n            className={\r\n              this.props.buttonPosition === \"row\"\r\n                ? \"flex-row form-row flex-middle\"\r\n                : \"flex-column\"\r\n            }\r\n          >\r\n            <div\r\n              className={classNames(\"form_children\", { blur: this.props.blur })}\r\n            >\r\n              {this.props.childrenFirst && this.props.children}\r\n              {this.props.formMaker &&\r\n                FormMaker(\r\n                  {\r\n                    fields: this.props.formMaker.list,\r\n                    Transition: this.props.formMaker.Transition,\r\n                    currentValues: this.state.currentValues,\r\n                    wrapperClassName: this.props.formMaker.wrapperClassName,\r\n                  },\r\n                  this.props.defaultModel\r\n                )}\r\n              {!this.props.childrenFirst && this.props.children}\r\n            </div>\r\n            {this.props.showIncompleteFieldIndicator && !_.isEmpty(incompleteFields) && (\r\n              <div className=\"light-blue-box padding-10\">\r\n                <span>\r\n                  Please provide{\" \"}\r\n                  {_.map(incompleteFields, (iF, index) => (\r\n                    <b>\r\n                      {\" \"}\r\n                      &nbsp;\r\n                      {_.capitalize(\r\n                        _.lowerCase(\r\n                          iF.props.errorLabel || iF.props.label || iF.props.name\r\n                        )\r\n                      )}\r\n                      {index != incompleteFields.length - 1 && \",\"}\r\n                    </b>\r\n                  ))}\r\n                  &nbsp;to continue..\r\n                </span>\r\n              </div>\r\n            )}\r\n            {\r\n              <div\r\n                className={classNames(\r\n                  \"text-center margin-t-b-20\",\r\n                  this.props.buttonWrapperClassName,\r\n                  { blur: this.props.blur }\r\n                )}\r\n              >\r\n                {this.props.backButton && (\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    className=\"margin-l-r-10\"\r\n                    onClick={() =>\r\n                      this.props.backButton.onClick({ submit: this.submit })\r\n                    }\r\n                  >\r\n                    {_.get(this.props.backButton, \"label\", \"back\")}\r\n                  </Button>\r\n                )}\r\n                {!this.props.submitButton.hide && (\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant={this.props.submitButton.variant}\r\n                    className={this.props.submitButton.className}\r\n                    fullWidth={this.props.submitButton.fullWidth}\r\n                    size={this.props.submitButton.size || \"large\"}\r\n                    color=\"primary\"\r\n                    disabled={\r\n                      this.props.submitButton.disabled || !this.state.isValid\r\n                    }\r\n                    id={_.get(this.props.submitButton, \"submitButtonId\")}\r\n                    style={this.props.submitButton.style}\r\n                  >\r\n                    {this.state.isSubmitting ? (\r\n                      <CircularProgress color=\"white\" />\r\n                    ) : (\r\n                      this.props.submitButton.label\r\n                    )}\r\n                  </Button>\r\n                )}\r\n                {this.props.secondaryButton &&\r\n                  !this.props.secondaryButton.hide && (\r\n                    <div\r\n                      style={{\r\n                        marginTop:\r\n                          this.props.buttonPosition === \"row\" ? 28 : 13,\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        size={this.props.secondaryButton.size || \"large\"}\r\n                        fullWidth={this.props.secondaryButton.fullWidth}\r\n                        variant={this.props.secondaryButton.color || \"outlined\"}\r\n                        color={this.props.secondaryButton.color || \"secondary\"}\r\n                        className={this.props.submitButton.className}\r\n                        disabled={\r\n                          this.props.secondaryButton.disableOnInvalid &&\r\n                          !this.state.isValid\r\n                        }\r\n                        onClick={() =>\r\n                          this.props.secondaryButton.onClick({\r\n                            submit: this.submit,\r\n                          })\r\n                        }\r\n                        style={this.props.submitButton.style}\r\n                      >\r\n                        {this.props.secondaryButton.label || \"Cancel\"}\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n              </div>\r\n            }\r\n          </div>\r\n        </Formsy>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nForm.defaultProps = {\r\n  submitButton: {\r\n    label: \"Next step\",\r\n  },\r\n  onSubmit: _.noop,\r\n  onChange: _.noop,\r\n  onInvalid: _.noop,\r\n  onValid: _.noop,\r\n  showIncompleteFieldIndicator: true\r\n};\r\n\r\nexport default Form;\r\n","D:\\lak\\globaldart\\src\\web-bricks\\lib\\request.js",[],"D:\\lak\\globaldart\\src\\web-bricks\\Shared\\form\\components\\formMaker.js",[],"D:\\lak\\globaldart\\src\\web-bricks\\config.js",["264"],"export default {\r\n    api: {\r\n        \r\n    }\r\n}","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\htmlInput.js",["265"],"import React from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport { withFormsy } from 'formsy-react';\r\n\r\n\r\nclass HTMLInput extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.props.setValue(props.defaultValue)\r\n  }\r\n  handleEditorChange = (content, editor) => {\r\n    this.props.setValue(content)\r\n  }\r\n\r\n  // onImageUpload = (blobInfo, success, error) => {\r\n  //   upload({\r\n  //     file: blobInfo.blob(),\r\n  //     filename: blobInfo.filename(),\r\n  //     folder: 'images'\r\n  //   }, success, error)\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <Editor\r\n        initialValue={this.props.value}\r\n        apiKey=\"instxctcptb9e5fo3jqkew24gouykfomn0stlg17qz200wg1\"\r\n        init={{\r\n          height: 500,\r\n          menubar: false,\r\n          // images_upload_handler: this.onImageUpload,\r\n          plugins: [\r\n            'advlist autolink lists link image charmap print preview anchor',\r\n            'searchreplace visualblocks code fullscreen',\r\n            'insertdatetime media table paste code wordcount'\r\n          ],\r\n          toolbar:\r\n            'undo redo | formatselect | bold italic backcolor | \\\r\n            alignleft aligncenter alignright alignjustify | \\\r\n            bullist numlist outdent indent | removeformat'\r\n        }}\r\n        onEditorChange={this.handleEditorChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFormsy(HTMLInput);\r\n","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\autoComplete.js",["266","267"],"import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\nimport { withFormsy } from 'formsy-react';\r\nimport CustomFormHOC from './customFormHoc';\r\nimport _ from 'lodash';\r\nimport { Label } from '@material-ui/icons';\r\n\r\nconst filter = createFilterOptions();\r\n\r\nclass AutoComplete extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          value: null,\r\n          dialogValue:''\r\n        }\r\n        this.props.setValue(this.props.defaultValue);\r\n    }\r\n\r\n    updateValue = (label) =>{\r\n      this.props.setValue(label);\r\n      this.props.onChange(label);\r\n      this.setState({\r\n        dialogValue:label\r\n      })\r\n    }\r\n\r\n  render() {\r\n    return (\r\n        <Autocomplete\r\n          value={this.props.value}\r\n          defaultValue={this.props.defaultValue}\r\n          onChange={(event, newValue) => {\r\n            if (typeof newValue === 'string') {\r\n                this.updateValue(newValue)\r\n            } else if (newValue && newValue.inputValue) {\r\n              this.updateValue(newValue.inputValue)\r\n            } else {\r\n              this.updateValue(newValue);\r\n            }\r\n          }}\r\n          filterOptions={(options, params) => {\r\n            const filtered = filter(options, params);\r\n            if (params.inputValue !== '') {\r\n              filtered.push({\r\n                inputValue: params.inputValue,\r\n                label: `Add \"${params.inputValue}\"`,\r\n              });\r\n            }\r\n            return filtered;\r\n          }}\r\n          options={this.props.options}\r\n          getOptionLabel={(option) => {\r\n            // e.g value selected with enter, right from the input\r\n            if (typeof option === 'string') {\r\n              return option;\r\n            }\r\n            if (option.inputValue) {\r\n              return option.inputValue;\r\n            }\r\n            return option.label;\r\n          }}\r\n          selectOnFocus\r\n          clearOnBlur\r\n          handleHomeEndKeys\r\n          freeSolo\r\n          renderInput={(params) => (\r\n            <TextField {...params} label={this.props.label}/>\r\n          )}\r\n        />\r\n    );\r\n  }\r\n}\r\n\r\nAutoComplete.defaultProps = {\r\nonChange: _.noop,\r\n};\r\n\r\nexport default {\r\nformInput: withFormsy(AutoComplete),\r\ninput: CustomFormHOC(AutoComplete),\r\n};\r\n","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\uploadToFirebase.js",["268"],"import { Avatar, CircularProgress } from \"@material-ui/core\";\r\nimport { Image } from \"@material-ui/icons\";\r\nimport { withFormsy } from \"formsy-react\";\r\nimport React, { Component } from \"react\";\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\nimport customFormHoc from \"./customFormHoc\";\r\nimport _ from 'lodash'; \r\nimport classnames from 'classnames';\r\n\r\nclass FirebaseFileUploader extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      avatar: \"\",\r\n      isUploading: false,\r\n    };\r\n    this.props.setValue(this.props.defaultValue);\r\n  }\r\n\r\n  handleUploadStart = () => {\r\n    this.setState({ isUploading: true })\r\n  };\r\n\r\n  handleUploadError = error => {\r\n    this.setState({ isUploading: false });\r\n  };\r\n\r\n  handleUploadSuccess = filename => {\r\n    this.props.firebase\r\n    .storage()\r\n    .ref(\"images\")\r\n    .child(filename)\r\n    .getDownloadURL()\r\n    .then(url => {\r\n      this.props.onChange(url)\r\n      this.props.setValue(url)\r\n      this.setState({ avatar: filename, isUploading: false });\r\n    });\r\n  }\r\n \r\n  // handleChangeUsername = event =>\r\n  //   this.setState({ username: event.target.value });\r\n    \r\n  // };\r\n \r\n  render() {\r\n    return (\r\n      <div className={classnames('f-f-uploader', this.props.className)}>\r\n          <div className=\"f-f-upload-avatar\">\r\n              {\r\n                  this.state.isUploading ?\r\n                      <div className=\"f-f-progress\" ><CircularProgress size=\"30px\" thickness={5} color=\"primary\" /> </div>\r\n                    : <Avatar src={this.props.value || null} className=\"f-f-upload-btn\" color=\"secondary\" variant=\"rounded\" ><Image  className=\"f-f-upload-icon\"  color=\"primary\"/></Avatar>\r\n              }\r\n          </div>\r\n        <div className=\"f-f-upload-hidden\">\r\n            <FileUploader\r\n                accept=\"image/*\"\r\n                name={this.props.name}\r\n                randomizeFilename\r\n                storageRef={this.props.firebase.storage().ref(\"images\")}\r\n                onUploadStart={this.handleUploadStart}\r\n                onUploadError={this.handleUploadError}\r\n                onUploadSuccess={this.handleUploadSuccess}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFirebaseFileUploader.defaultProps = {\r\n  onChange: _.noop,\r\n}\r\n \r\nexport default {\r\n    formInput: withFormsy(FirebaseFileUploader),\r\n    input: customFormHoc(FirebaseFileUploader),\r\n};","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\switch.js",["269"],"import React from 'react';\r\nimport SwitchInput from '@material-ui/core/Switch';\r\nimport { withFormsy } from 'formsy-react';\r\nimport CustomFormHOC from './customFormHoc';\r\nimport _ from 'lodash';\r\n\r\nclass Switch extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.props.setValue(this.props.defaultValue);\r\n    }\r\n\r\n    onChange = (event) => {\r\n        const value = event.target.checked;\r\n        this.props.setValue(value);\r\n        this.props.onChange(value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"switch__container\">\r\n                <SwitchInput\r\n                    checked={this.props.value}\r\n                    value={this.props.value}\r\n                    name={this.props.name}\r\n                    {...this.props}\r\n                    onChange={this.onChange}\r\n                    defaultChecked = {this.props.defaultValue}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSwitch.defaultProps = {\r\n    onChange: _.noop,\r\n};\r\n\r\nexport default {\r\n    formInput: withFormsy(Switch),\r\n    input: CustomFormHOC(Switch),\r\n};\r\n","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\checkbox.js",["270"],"import React, { Component } from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { withFormsy } from 'formsy-react';\r\nimport _ from 'lodash';\r\nimport customFormHoc from './customFormHoc';\r\n\r\nclass CheckboxItem extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.props.setValue(this.props.defaultValue);\r\n    }\r\n\r\n  \r\n    onChange = (e) => {\r\n        const value = e.target.checked;\r\n        this.props.setValue(value);\r\n        this.props.onChange(value, e);\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"amenity__item\">\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox\r\n                            checked={this.props.value}\r\n                            onChange={this.onChange}\r\n                            name={this.props.name}\r\n                            color=\"primary\"\r\n                            defaultChecked = {this.props.defaultValue}\r\n                            color='secondary'\r\n                        />\r\n                    }\r\n                    label={this.props.label}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nCheckboxItem.defaultProps = {\r\n    onChange: _.noop,\r\n};\r\n\r\nconst nonFormsyHOC = customFormHoc(CheckboxItem);\r\n\r\nexport { nonFormsyHOC as CheckboxItem };\r\nexport default withFormsy(CheckboxItem);\r\n","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\radio.js",["271"],"import React from 'react';\r\nimport _ from 'lodash';\r\nimport  { withFormsy } from 'formsy-react';\r\nimport { FormControlLabel, Radio, RadioGroup } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport customFormHoc from './customFormHoc';\r\n\r\nrequire('../../styles/main.scss');\r\n\r\nclass RadioGroupForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.setValue(props.defaultValue);\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.props.setValue(e.target.value)\r\n        this.props.onChange(e, e.target.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <RadioGroup\r\n                key={this.props.value}\r\n                value={this.props.value || this.props.defaultValue}\r\n                name={this.props.name}\r\n                onChange={this.onChange}\r\n                required={this.props.required}\r\n            >\r\n            <div className={this.props.displayInRow ? 'flex-row' : 'flex-column'}>\r\n                {\r\n                    _.map(this.props.list, (item, index) => {\r\n                        return (\r\n                            <>\r\n                            <div>\r\n                                <FormControlLabel\r\n                                    name={this.props.name}\r\n                                    key={index}\r\n                                    value={item.value || item.label}\r\n                                    control={<Radio />}\r\n                                    label={_.capitalize(_.upperCase(item.label))}\r\n                                    checked={item.checked}\r\n                                    color='white'\r\n                                    //style={{color: item.checked?'white':'black', margin:10}}\r\n                                />\r\n                                { item.caption && <p >{item.caption}</p> }\r\n                                { item.secondaryText && <p style={{color: 'grey',fontSize: 15,paddingLeft: 31, marginTop:0}}>{item.secondaryText}</p>}\r\n                            </div>\r\n                            </>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n            </div>   \r\n            </RadioGroup>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nRadioGroupForm.defaultProps = {\r\n    onChange: _.noop,\r\n}\r\n\r\nconst nonFormsyHOC = customFormHoc(RadioGroupForm);\r\n\r\nexport { nonFormsyHOC as RadioGroupForm };\r\nexport default withFormsy(RadioGroupForm);\r\n","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\CheckboxList.js",[],"D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\select.js",[],"D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\textarea.js",["272"],"import React from 'react';\r\nimport _ from 'lodash';\r\nimport { withFormsy } from 'formsy-react';\r\nimport CustomFormHOC from './customFormHoc';\r\n\r\nclass TextArea extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            value: props.value,\r\n        }\r\n        this.changeValue = this.changeValue.bind(this);\r\n        this.props.setValue(this.props.value);\r\n    }\r\n\r\n    changeValue(e){\r\n        const value = e.target.value;\r\n        this.setState({ \r\n            value,\r\n        })\r\n        this.props.setValue(value);\r\n        this.props.onChange(value, e);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(this.props.value !== nextProps.value){\r\n            this.setState({ \r\n                value: nextProps.value,\r\n            })\r\n            this.props.setValue(nextProps.value);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"textarea__container caption\">\r\n                <textarea\r\n                    className = {this.props.className}\r\n                    name={this.props.name}\r\n                    disabled={!this.props.edit}\r\n                    placeholder={this.props.placeholder}\r\n                    onFocus={this.props.onFocus}\r\n                    onBlur={this.props.onBlur}\r\n                    onChange={this.changeValue}\r\n                    value={this.state.value}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nTextArea.defaultProps = {\r\n    onBlur: _.noop,\r\n    onFocus: _.noop,\r\n    edit: true,\r\n};\r\n\r\nexport default {\r\n    formInput: withFormsy(TextArea),\r\n    input: CustomFormHOC(TextArea),\r\n};\r\n","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\button.js",[],"D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\textField.js",[],"D:\\lak\\globaldart\\src\\web-bricks\\Shared\\files\\excelToJSON.js",["273","274"],"import React, { Component } from 'react';\r\nimport _ from 'lodash'\r\nimport XLSX from 'xlsx';\r\nimport { withFormsy } from 'formsy-react';\r\nimport { Button } from '@material-ui/core';\r\nimport { CloudUpload } from '@material-ui/icons';\r\n \r\n\r\nconst SheetJSFT = [\r\n\t\"xlsx\", \"xlsb\", \"xlsm\", \"xls\", \"xml\", \"csv\", \"txt\", \"ods\", \"fods\", \"uos\", \"sylk\", \"dif\", \"dbf\", \"prn\", \"qpw\", \"123\", \"wb*\", \"wq*\", \"html\", \"htm\"\r\n].map(function(x) { return \".\" + x; }).join(\",\");\r\n\r\n/* generate an array of column objects */\r\nconst make_cols = refstr => {\r\n\tlet o = [], C = XLSX.utils.decode_range(refstr).e.c + 1;\r\n\tfor(var i = 0; i < C; ++i) o[i] = {name:XLSX.utils.encode_col(i), key:i}\r\n\treturn o;\r\n};\r\n\r\nclass ExcelToJSON extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      file: {},\r\n      data: null,\r\n      cols: []\r\n    }\r\n    this.fileRef = React.createRef();\r\n    this.handleFile = this.handleFile.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n \r\n  handleChange(e) {\r\n    const files = e.target.files;\r\n    if (files[0])\r\n      this.handleFile(files[0]);\r\n  };\r\n \r\n  handleFile(file) {\r\n    /* Boilerplate to set up FileReader */\r\n    const reader = new FileReader();\r\n    const rABS = !!reader.readAsBinaryString;\r\n \r\n    reader.onload = (e) => {\r\n      /* Parse data */\r\n      const bstr = e.target.result;\r\n      const wb = XLSX.read(bstr, { type: rABS ? 'binary' : 'array', bookVBA : true });\r\n      /* Get first worksheet */\r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n      /* Convert array of arrays */\r\n      const data = XLSX.utils.sheet_to_json(ws);\r\n\r\n      this.props.setValue(data)\r\n\r\n      this.setState({ data: data })\r\n    };\r\n \r\n    if (rABS) {\r\n      reader.readAsBinaryString(file);\r\n    } else {\r\n      reader.readAsArrayBuffer(file);\r\n    };\r\n  }\r\n\r\n  initUpload = () => this.fileRef.current.click()\r\n \r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          //size=\"large\"\r\n          style={{backgroundColor:'#244441', color:'white',fontSize:20}}\r\n          className=\"big-btn full-width\"\r\n          fullWidth\r\n          onClick={this.initUpload}\r\n          endIcon={this.props.endIcon}\r\n        >Add Products</Button>\r\n        {\r\n          this.state.data &&\r\n            <span className=\"margin-t-b-10 color-green\" style={{fontSize:12, color:'grey', margin:'2px'}}>{_.size(this.state.data)} Inventories detected. Click SUBMIT to enter inventories</span>\r\n        }\r\n         <input\r\n            ref={this.fileRef}\r\n            style={{display: \"none\"}}\r\n            type=\"file\"\r\n            className=\"form-control\"\r\n            id=\"file\"\r\n            accept={SheetJSFT}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n    )\r\n  }\r\n}\r\n \r\nexport default withFormsy(ExcelToJSON);",["275","276"],"D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\customFormHoc.js",["277"],"import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport default Component => class extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: props.value || props.defaultValue,\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (!_.isEqual(nextProps.value, this.props.value)) {\r\n            this.setState({\r\n                value: nextProps.value,\r\n            });\r\n        }\r\n    }\r\n\r\n    getValue = () => {\r\n        return this.state.value;\r\n    }\r\n\r\n    setValue = (value) => {\r\n        this.setState({\r\n            value,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Component\r\n                {...this.props}\r\n                ref={this.props.innerRef}\r\n                getValue={this.getValue}\r\n                setValue={this.setValue}\r\n                value={this.state.value}\r\n            />\r\n        )\r\n    }\r\n};","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\form\\components\\singleGroupLine.js",["278"],"import React from 'react';\r\nimport { Checkbox, Radio } from '@material-ui/core';\r\nimport _ from 'lodash'\r\nimport { withFormsy } from 'formsy-react';\r\n\r\n\r\nclass SingleGroupLine extends React.PureComponent {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedLine: this.getDefaultSelectedLine()\r\n        }\r\n\r\n        if (!_.isEmpty(this.props.defaultValue)) {\r\n            this.props.setValue(this.props.defaultValue)\r\n        }\r\n    }\r\n\r\n    getDefaultSelectedLine = () => {\r\n        return _.findIndex(this.props.list, ({ defaultSelected: true }));\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if (!_.isEqual(prevProps.formCurrentValues, this.props.formCurrentValues)) {\r\n            let value = _.cloneDeep(this.props.value);\r\n            value = _.get(this.props.formCurrentValues, `__${this.props.name}.${this.state.selectedLine}`)\r\n            this.props.setValue(value)\r\n        }\r\n    }\r\n\r\n    onSingleLineActive = (group, index) => (event) => {\r\n        const isChecked = event.target.checked;\r\n\r\n        let value;\r\n\r\n        if (isChecked) {\r\n            value = _.get(this.props.formCurrentValues, `__${this.props.name}.${index}`)\r\n        } else {\r\n            value = null;\r\n        }\r\n\r\n        this.setState({\r\n            selectedLine: index\r\n        })\r\n        this.props.setValue(value);\r\n    }\r\n\r\n    isSelected = (index) => {\r\n        return this.props.radioButton === true ? _.isEqual(this.state.selectedLine, index) : true;\r\n    }\r\n\r\n    render() {\r\n        const FormMaker = this.props.FormMaker;\r\n        return (\r\n            <div>\r\n                {\r\n                    _.map(this.props.list, (group, index) => {\r\n                        const isSelected = this.isSelected(index)\r\n                        return (\r\n                            <div className=\"group-line flex-middle\">\r\n                                {\r\n                                    this.props.radioButton &&\r\n                                    <Radio\r\n                                        checked={isSelected}\r\n                                        onChange={this.onSingleLineActive(group, index)}\r\n                                        name={this.props.name}\r\n                                    />\r\n                                }\r\n                                <div className={(!isSelected) && 'line-disabled'}>\r\n                                    {FormMaker({\r\n                                        ...group,    \r\n                                        wrapperClassName: 'flex-middle',\r\n                                        fields: _.map(group.fields, (field, fieldIndex) => {\r\n\r\n                                            return ({\r\n                                                ...field,\r\n                                                style:  field.type === 'HiddenInput' ? {} : {\r\n                                                    minWidth: field.type !== 'Block' && 150,\r\n                                                    margin: '0px 10px'\r\n                                                },\r\n                                                props: {\r\n                                                    ...field.props,\r\n                                                    required: isSelected,\r\n                                                    name: `__${this.props.name}.${index}.${field.props.name}`\r\n                                                }\r\n                                            })\r\n                                        }),\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withFormsy(SingleGroupLine);","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\address.js",["279","280","281","282","283"],"import React,{ Component } from 'react';\r\nimport Prediction from './placesPredictions';\r\nimport Text from './textField';\r\n// import { getCountries } from \"../../lib/enums\";\r\nimport _ from 'lodash';\r\nimport Select from '../../Shared/Input/select';\r\nimport GoogleMapPicker from './mapsPicker';\r\nimport HiddenInput from '../../Shared/Input/hiddenInput'\r\n\r\nclass Address extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        const address = this.props.address;\r\n        // this.countriesList = getCountries();\r\n        this.state = {\r\n            address_line_1 : address ? `${address.addressLineOne} `: '',\r\n            address_line_2 : address ? `${address.addressLineTwo}` : '',\r\n            //country : address ?address.country : 'IN',\r\n            state : address ?address.state : '',\r\n            city: address ?address.city : '',\r\n            zip : address ?address.zipCode : '',\r\n            address : address,\r\n            lat :address && address.lat ,\r\n            lng : address && address.lng\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(!_.isEqual(this.props.address, nextProps.address)) {\r\n            this.setState(nextProps.address);\r\n        }\r\n    }\r\n\r\n    onSelect = (address) => {\r\n        this.setState(address);\r\n    }\r\n\r\n    render(){\r\n        \r\n        return (\r\n            <div>\r\n                {/* <GoogleMapPicker.input onSelect={this.onSelect} name='Lng' value={{ lat: this.state.lat, lng: this.state.lng }} defaultValue={this.state.address ?{ lat: this.state.lat, lng: this.state.lng } : {}}/>\r\n                <HiddenInput name=\"lat\" value={this.state.lat} />\r\n                <HiddenInput name=\"lng\" value={this.state.lng} /> */}\r\n                <Prediction.formInput required placeholder=\"Area/street name\" label= 'Apartment/Bulding/Street name' name=\"addressLineTwo\" onSelect={this.onSelect} value={this.state.address_line_2} defaultValue ={this.state.address_line_2} onSelect={this.onSelect} />\r\n                {\r\n                    // this.props.useCurrentLocation &&\r\n                    //     <CurrentAddress />\r\n                }\r\n                <Text label=\"Flat no/House no/Apartment name\"  name=\"addressLineOne\"  value={this.state.address_line_1}required />\r\n                <Text className=\"city1\" label='City' name=\"city\" value={this.state.city} required/>\r\n                <Text label='State' name=\"state\" value={this.state.state} required/>\r\n                <Text label='Zipcode' name=\"zipCode\" value={this.state.zip} required/>\r\n                \r\n                {/* <Select\r\n                    name=\"country\"\r\n                    placeholder=\"Country\"\r\n                    value={this.state.country}\r\n                    list={this.countriesList}\r\n                    defaultValue={this.state.country}\r\n                    required\r\n                /> */}\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddress.defaultProps = {\r\n    useCurrentLocation: true,\r\n};\r\n\r\nexport default Address;","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\form\\components\\groupLine.js",[],"D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\creatableAutocomplete.js",["284","285"],"import React from 'react';\r\n// import TextField from '@material-ui/core/TextField';\r\n// import Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\nimport { Chip, CircularProgress } from '@material-ui/core';\r\nimport _ from 'lodash';\r\nimport customFormHoc from './customFormHoc';\r\nimport { withFormsy } from 'formsy-react';\r\nimport { SelectNonFormInput } from './select';\r\n\r\n// const filter = createFilterOptions();\r\n// const [value, setValue] = React.useState('');\r\n// const [key, updateKey] = React.useState(0)\r\nconst defaultProps = {\r\n  freeSolo: true,\r\n  selectedOptionProps: {}\r\n}\r\n\r\nclass MultiSelect extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.setValue(props.defaultValue || []);\r\n  }\r\n\r\n\r\n  setValue = (value) =>{\r\n    this.props.setValue(value)\r\n  }\r\n\r\n  onSelect = (value) => {\r\n    const list = this.props.value;\r\n    this.setValue(_.concat(list, value));\r\n  }\r\n\r\n  onDelete = (option) => {\r\n    const list = this.props.value;\r\n    this.setValue(_.without(list, option.value))\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div >\r\n        <SelectNonFormInput\r\n          key={_.size(this.props.value)}\r\n          list={_.filter(this.props.list, i => !_.includes(this.props.value, i.value))}\r\n          onChange={this.onSelect}\r\n          label={this.props.label || \"Choose tags\"}\r\n        />\r\n        <div style={{ marginTop: 10, marinBottom: 10}}>\r\n          {\r\n            _.map(this.props.value, (selectedOption, index) => {\r\n              const option = _.find(this.props.list, ({ value: selectedOption }));\r\n              if (!option) return null;\r\n\r\n              return (<Chip\r\n                key={index}\r\n                onDelete={() => this.onDelete(option)}\r\n                className=\"margin-5\"\r\n                {...this.props.selectedOptionProps}\r\n                variant=\"outlined\"\r\n                label={\r\n                  <div className=\"flex-center\">\r\n                    <span>{option.label}</span>\r\n                  </div>\r\n              }/>)\r\n            })\r\n              \r\n          }\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nconst nonFormsyHOC = customFormHoc(MultiSelect);\r\n\r\nexport { nonFormsyHOC as MultiSelect };\r\nexport default withFormsy(MultiSelect);\r\n","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\sketchPicker.js",["286"],"'use strict'\r\n\r\nimport React from 'react'\r\nimport reactCSS from 'reactcss'\r\nimport { SketchPicker } from 'react-color'\r\nimport customFormHoc from './customFormHoc';\r\nimport { withFormsy } from 'formsy-react';\r\n\r\nclass SketchExample extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.setValue(this.props.defaultValue);\r\n    }\r\n\r\n  state = {\r\n    displayColorPicker: false,\r\n    color: this.props.defaultValue\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({ displayColorPicker: !this.state.displayColorPicker })\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ displayColorPicker: false })\r\n  };\r\n\r\n  handleChange = (color) => {\r\n    this.setValue(color.hex)\r\n    // this.props.onChange(color)\r\n    this.setState({ color: color.hex })\r\n  };\r\n\r\n    setValue = value => {\r\n        this.props.setValue(value)\r\n    }  \r\n\r\n  render() {\r\n\r\n    const styles = reactCSS({\r\n      'default': {\r\n        color: {\r\n          width: '45px',\r\n          height: '27px',\r\n          borderRadius: '2px',\r\n          background: this.state.color,\r\n        },\r\n        swatch: {\r\n          padding: '5px',\r\n          background: '#fff',\r\n          borderRadius: '1px',\r\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n          display: 'inline-block',\r\n          cursor: 'pointer',\r\n        },\r\n        popover: {\r\n          position: 'absolute',\r\n          zIndex: '2',\r\n        },\r\n        cover: {\r\n          position: 'fixed',\r\n          top: '0px',\r\n          right: '0px',\r\n          bottom: '0px',\r\n          left: '0px',\r\n        },\r\n      },\r\n    });\r\n\r\n    return (\r\n      <div>\r\n      <p style={{color:'#5a5a5a', fontSize:13}}>{this.props.required ? `${this.props.label} *` :this.props.label}</p>\r\n        <div style={ styles.swatch } onClick={ this.handleClick }>\r\n          <div style={ styles.color } />\r\n        </div>\r\n        { this.state.displayColorPicker ? <div style={ styles.popover }>\r\n          <div style={ styles.cover } onClick={ this.handleClose }/>\r\n          <SketchPicker color={ this.state.color } onChange={ this.handleChange } />\r\n        </div> : null }\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst nonFormsyHOC = customFormHoc(SketchExample);\r\n\r\nexport { nonFormsyHOC as SketchExample };\r\nexport default withFormsy(SketchExample);","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\chipInput.js",["287"],"import _ from 'lodash';\r\nimport React, {Component} from 'react';\r\nimport { withFormsy } from 'formsy-react';\r\nimport customFormHoc from './customFormHoc';\r\nimport {Text} from './textField'; \r\nimport { CircularProgress} from '@material-ui/core';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Button from './button'\r\nrequire('./styles.scss');\r\n\r\nclass ChipsInput extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            value :'',\r\n        }\r\n        this.setValue(this.props.defaultValue);\r\n    }\r\n\r\n    addChip = values => {\r\n        this.props.value.push(values);\r\n        this.setValue(this.props.value)\r\n    };\r\n\r\n    removeChip = index => {\r\n        const chips = _.cloneDeep(this.props.value)\r\n        _.pullAt(chips , [index]);\r\n        this.setValue(chips)\r\n    };\r\n\r\n    onChange = (value) =>{\r\n        this.setState({ value : value })\r\n    }\r\n\r\n    setValue = value => {\r\n        // if (this.props.type === 'number') {\r\n        //     value = parseFloat(value)\r\n        // }\r\n        this.props.setValue(value)\r\n    }\r\n\r\n    onKeyDown = (event) => {\r\n        if (event.keyCode === 13) {\r\n            this.props.onEnter(this.state.value, event);\r\n            this.props.onInteractionComplete(this.state.value, event);\r\n        }\r\n        this.props.onKeyDown();\r\n    }\r\n\r\n    onAddZipCode = () =>{\r\n        this.addChip(this.state.value)\r\n        this.setState({\r\n            value : ''\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div style={{display:'flex', justifyContent:'space-between'}}>\r\n                    <Text\r\n                        onChange = {this.onChange}\r\n                        fullWidth\r\n                        label=\"Add Zipcode\"\r\n                        value ={this.state.value}\r\n                    />\r\n                    <Button\r\n                        style={{ fontSize: 18, opacity: 0.8 , marginTop:15}}\r\n                        className=\"big-btn\"\r\n                        fullWidth\r\n                        variant=\"contained\" \r\n                        color=\"primary\"\r\n                        onClick={this.onAddZipCode}\r\n                        disabled ={this.state.value.length !== 6 && true}\r\n                    >Add</Button>\r\n                </div>\r\n                <div className=\"margin-t-b-10\">\r\n                { _.map(this.props.value, (selectedOption, index) =>\r\n                        <Chip\r\n                            key={index}\r\n                            onDelete={() => this.removeChip(index)}\r\n                            className=\"margin-5\"\r\n                            // {...this.props.selectedOptionProps}\r\n                            onChange={this.changeValue}\r\n                            label={\r\n                                <div className=\"flex-center\">\r\n                                    <span>{selectedOption}</span>\r\n                                </div>\r\n                            }/>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        ) \r\n    }\r\n}\r\n\r\nChipsInput.defaultProps = {\r\n    onKeyDown: _.noop,\r\n    onEnter: _.noop,\r\n    onInteractionComplete: _.noop,\r\n    onChange: _.noop,\r\n};\r\n\r\nconst nonFormsyHOC = customFormHoc(ChipsInput);\r\n\r\nexport { nonFormsyHOC as ChipsInput };\r\nexport default withFormsy(ChipsInput);","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\hiddenInput.js",["288"],"import { withFormsy } from 'formsy-react';\r\nimport React from 'react';\r\n\r\n\r\n\r\nclass HiddenInput extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return null\r\n    }\r\n}\r\n\r\n\r\nexport default withFormsy(HiddenInput)","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\dateTimePicker.js",["289"],"import React from 'react';\r\nimport _ from 'lodash';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  DateTimePicker,\r\n  TimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { withFormsy } from 'formsy-react';\r\nimport moment from 'moment';\r\nimport dateLib from '../../lib/date';\r\n\r\n\r\nclass DateField extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const defaultValue = props.defaultValue || (props.defaultToToday && new Date());\r\n\r\n        this.state = {\r\n          date: defaultValue,\r\n        }\r\n\r\n        if (defaultValue) {\r\n          this.onChange(defaultValue);\r\n        }\r\n        \r\n        this.format = this.props.dateTimePicker ? 'dd MMM, hh:mm a' : this.props.timePicker ? 'hh:mm a' : 'dd/MM/yyyy';\r\n        this.momentFormat = this.props.dateTimePicker ? 'dd MMM, hh:mm a' : this.props.timePicker ? 'hh:mm a' : 'DD/MM/YYYY';\r\n    }\r\n\r\n    maskDate = (date) => {\r\n      return date ? moment(date, this.momentFormat).toDate() : null;\r\n    }\r\n\r\n    getMomentObj = (date) => moment(date, this.momentFormat);\r\n  \r\n    onChange = (date) => {\r\n      if (!date) return;\r\n      const momentObj = this.getMomentObj(date);\r\n        if (this.props.calculateAge && momentObj._isValid) {\r\n            var { age, ageString } = dateLib.getAge(momentObj);\r\n            this.setState({\r\n                ageString,\r\n                age\r\n            })\r\n            this.props.onAgeChange(age.years);\r\n            this.props.setValue(this.maskDate(date));\r\n        } else {\r\n          this.props.setValue(this.maskDate(date))\r\n        }\r\n        this.setState({\r\n          date,\r\n        })\r\n      }\r\n      \r\n      render() {\r\n        const Picker = this.props.dateTimePicker ? DateTimePicker : this.props.timePicker ? TimePicker : KeyboardDatePicker;\r\n        const value = this.props.value;\r\n        return (\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <Picker\r\n                    name={this.props.name}\r\n                    format={this.format}\r\n                    placeholder={this.props.timePicker ? \"hh:mm a\" :\"DD/MM/YYYY\"}\r\n                    margin=\"normal\"\r\n                    value={value || null}\r\n                    id=\"dob\"\r\n                    label={(this.props.label || '') + (this.props.timePicker ? '(hh:mm a)' : '(dd/mm/yyyy)')}\r\n                    onChange={this.onChange}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                />\r\n                {\r\n                  this.state.ageString && \r\n                      <div>\r\n                          <b>Age: </b>\r\n                          {this.state.ageString}\r\n                          <br />\r\n                      </div>\r\n                }\r\n            </MuiPickersUtilsProvider>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default withFormsy(DateField);\r\n\r\n\r\n","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\sharedDataTable.js",["290","291"],"import React from 'react';\r\nimport _ from 'lodash';\r\nimport DataTable from \"../table/dataGrid\";\r\nimport { withFormsy } from 'formsy-react';\r\nimport CustomFormHOC from './customFormHoc';\r\n\r\nclass SharedDataTable extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props); \r\n        this.state = {\r\n            list: []\r\n        }\r\n    }\r\n\r\n    onSelectionModelChange = (values) => {\r\n        this.setState({\r\n            list : values\r\n        })\r\n        this.props.setValue(values)\r\n        this.props.handleSelectionModelChange(values)    \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"shared_data_table\">\r\n                <DataTable\r\n                    columns={this.props.columns}\r\n                    onSelectionModelChange = {this.onSelectionModelChange}\r\n                    rows={this.props.rows}\r\n                    checkboxSelection={this.props.checkboxSelection}\r\n                /> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default {\r\n    formInput: withFormsy(SharedDataTable),\r\n    input: CustomFormHOC(SharedDataTable)\r\n}\r\n","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\socialMediaLinks.js",["292","293"],"import React from 'react';\r\nimport _ from 'lodash';\r\nimport { TextField, InputAdornment } from '@material-ui/core';\r\nimport { withFormsy } from 'formsy-react';\r\nimport { SocialLinks } from 'social-links';\r\nimport { Facebook, Twitter, LinkedIn, Instagram, YouTube } from '@material-ui/icons'\r\nconst socialLinks = new SocialLinks();\r\n\r\nclass SocialMediaLink extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n        }\r\n        this.props.setValue(props.defaultValue);\r\n    }\r\n\r\n    onChange = (e) => {\r\n\r\n        const isValid = socialLinks.isValid(_.toLower(this.props.medium), e.target.value);\r\n        if (isValid) {\r\n            const res = socialLinks.getProfileId(_.toLower(this.props.medium), e.target.value)\r\n            this.setState({\r\n                errorMessage: '',\r\n                errorValue: null\r\n            });\r\n            this.props.setValue(res)\r\n        } else {\r\n            this.setState({\r\n                errorMessage: 'Not a valid input.',\r\n                errorValue: e.target.value\r\n            })\r\n            this.props.setValue(null)\r\n        }\r\n    }\r\n\r\n    getValue = () => this.state.value\r\n\r\n    render() {\r\n        const value = this.getValue();\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    fullWidth\r\n                    {...this.props}\r\n                    onChange={this.onChange}\r\n                    value={this.state.errorValue || this.getValue()}\r\n                    error={!!this.state.errorMessage}\r\n                    helperText={this.state.errorMessage}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                {socialMediaIconMap[this.props.medium]}\r\n                            </InputAdornment>\r\n                        )\r\n                    }}\r\n                >\r\n                </TextField>\r\n                {\r\n                    value && \r\n                        <a className=\"color-blue\" target=\"_blank\" href={this.props.getPreviewLink(value)}>Preview link</a>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withFormsy(SocialMediaLink);\r\n\r\nconst socialMediaIconMap = {\r\n    Facebook: <Facebook />,\r\n    LinkedIn: <LinkedIn />,\r\n    Instagram: <Instagram />,\r\n    YouTube: <YouTube />\r\n}\r\n","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\rating.js",["294","295"],"import _ from 'lodash';\r\nimport React, {Component} from 'react';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { withFormsy } from 'formsy-react';\r\nimport classNames from 'classnames';\r\nimport customFormHoc from './customFormHoc';\r\nrequire('./styles.scss');\r\n\r\nclass RatingStars extends Component {\r\n    constructor(props){\r\n        super(props);\r\n         if (props.defaultValue)\r\n            props.setValue(props.defaultValue);\r\n    }\r\n\r\n    changeValue = (event, newValue) => {\r\n        this.props.setValue(newValue);\r\n        this.props.onChange(newValue, event);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Rating\r\n                {...this.props}\r\n                name=\"simple-controlled\"\r\n                value={this.props.value}\r\n                onChange={this.changeValue}\r\n                name={this.props.name}\r\n                precision={0.5}\r\n                color=\"primary\"\r\n                defaultChecked = {this.props.defaultValue}\r\n            />\r\n        ) \r\n    }\r\n}\r\n\r\nRatingStars.defaultProps = {\r\n    onChange: _.noop,\r\n};\r\n\r\nconst nonFormsyHOC = customFormHoc(RatingStars);\r\n\r\nexport { nonFormsyHOC as RatingStars };\r\nexport default withFormsy(RatingStars);\r\n","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\chips.js",["296","297","298"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { withStyles } from '@material-ui/core/styles';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Paper from '@material-ui/core/Paper';\r\n// import TagFacesIcon from '@material-ui/icons/TagFaces';\r\nimport { withFormsy } from 'formsy-react';\r\nimport customFormHoc from './customFormHoc';\r\nimport _ from 'lodash';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    padding: theme.spacing.unit / 2,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing.unit / 2,\r\n  },\r\n});\r\n\r\nclass ChipsArray extends React.Component {\r\n  state = {\r\n    chipData: [ ],\r\n  };\r\n\r\n  componentDidMount(){\r\n      this.setState({ chipData : this.props.list});\r\n  }\r\n\r\n  handleDelete = data => () => {\r\n      alert('Why would you want to delete React?! :)', data); // eslint-disable-line no-alert\r\n      return;\r\n\r\n    this.setState(state => {\r\n      const chipData = [...state.chipData];\r\n      const chipToDelete = chipData.indexOf(data);\r\n      chipData.splice(chipToDelete, 1);\r\n      return { chipData };\r\n    });\r\n  };\r\n\r\n  onClick = (value) =>{\r\n    this.props.onClick(value)\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Paper >\r\n        {this.state.chipData.map(info => {\r\n          let icon = null;\r\n          return (\r\n            <Chip\r\n            style={{margin:5}}\r\n              key={info.id}\r\n              icon={icon}\r\n              label={info.data}\r\n              onDelete={this.props.delete && this.handleDelete(info.data)}\r\n              onClick = {() => this.onClick(info.id)}\r\n              //className={classes.chip}\r\n            />\r\n          );\r\n        })}\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nChipsArray.defaultProps = {\r\n  classes: PropTypes.object.isRequired,\r\n  onKeyDown: _.noop,\r\n  onEnter: _.noop,\r\n  onInteractionComplete: _.noop,\r\n  onChange: _.noop,\r\n};\r\n\r\nconst nonFormsyHOC = customFormHoc(ChipsArray);\r\n\r\nexport { nonFormsyHOC as ChipsArray };\r\nexport default withFormsy(ChipsArray);","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\mapsPicker.js",["299","300","301"],"import React from 'react'\r\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\r\nimport CustomFormHOC from './customFormHoc';\r\nimport { withFormsy } from 'formsy-react';\r\nimport _ from 'lodash';\r\nimport { getAddressByCurrentLocation , getAddressByLatLng} from '../../lib/places';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '200px'\r\n};\r\n\r\nfunction GoogleMapPicker(props) {\r\n\r\n    const [latlng, updateLatLng] = React.useState(props.defaultValue)\r\n    if(_.isEmpty(latlng) || (latlng.lat === null)){\r\n        getAddressByCurrentLocation((data, latlng, rawAddress) => {\r\n            props.onSelect(data)\r\n            updateLatLng(latlng)\r\n        })\r\n    }\r\n\r\n    const { isLoaded } = useJsApiLoader({\r\n        id: 'google-map-script',\r\n        googleMapsApiKey: \"YOUR_API_KEY\"\r\n    })\r\n\r\n  const [map, setMap] = React.useState(null)\r\n\r\n  const onLoad = React.useCallback(function callback(map) {\r\n    // const bounds = new window.google.maps.LatLngBounds();\r\n    // map.fitBounds(bounds);\r\n    setMap(map)\r\n  }, [])\r\n\r\n  const onUnmount = React.useCallback(function callback(map) {\r\n    setMap(null)\r\n  }, [])\r\n\r\n  const onDraggableChanged = (address) =>{\r\n    let latLng = {\r\n        lat :address.latLng.lat(), lng: address.latLng.lng()\r\n    }\r\n    updateLatLng(latLng)\r\n    handleChangeLocation(latLng)\r\n  }\r\n\r\n  const handleChangeLocation = (latLng) =>{\r\n    const address = getAddressByLatLng(latLng.lat, latLng.lng, (formattedData) => {\r\n        props.onSelect(formattedData);\r\n    //this.handleChange(formattedData)\r\n    })\r\n}\r\n  return isLoaded && latlng && \r\n    <div style={{marginBottom:10}}>\r\n    {\r\n      !_.isEmpty(latlng) ?\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={latlng}\r\n        zoom={18}\r\n        onLoad={onLoad}\r\n        onUnmount={onUnmount}\r\n      >\r\n        { /* Child components, such as markers, info windows, etc. */ }\r\n        <Marker\r\n            //onLoad={onLoad}\r\n            position={latlng}\r\n            draggable={true}\r\n            // onDrag={onDrag}\r\n            onDragEnd ={onDraggableChanged}\r\n        />\r\n      </GoogleMap> : \r\n        <div style={{ position: 'relative', top: '50%', left: '50%', transform: [{ translateX: '-50%' }, { translateY: '-50%' }] }}>\r\n          <CircularProgress color=\"#041f40\"/>\r\n          <p style={{marginLeft:-40}}>Fetching maps...</p>\r\n        </div>\r\n    }\r\n      \r\n    </div>\r\n}\r\n\r\nGoogleMapPicker.defaultProps = {\r\n  onSelect: _.noop,\r\n  //restrictLabel: true,\r\n};\r\n\r\n\r\nexport default {\r\n  input: CustomFormHOC(GoogleMapPicker),\r\n  formInput: withFormsy(GoogleMapPicker),\r\n};\r\n\r\n","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\Input\\placesPredictions.js",["302","303"],"import React, {Component} from 'react';\r\nimport AutoComplete from '@material-ui/lab/Autocomplete';\r\nimport CustomFormHOC from './customFormHoc';\r\nimport { places, getPlaces } from '../../lib/places';\r\nimport _ from 'lodash';\r\nimport classNames from 'classnames';\r\nimport { withFormsy } from 'formsy-react';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nclass Prediction extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        dataSource : [],\r\n        inputValue : this.props.value ,\r\n        isFocused: false,\r\n        index: 0,\r\n      }\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.onNewRequest = this.onNewRequest.bind(this)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      if (!_.isEqual(this.props.value, prevProps.value)) {\r\n        this.setState({\r\n          inputValue: this.props.value,\r\n          index: this.state.index++\r\n        })\r\n      }\r\n    }\r\n\r\n    handleChange(e, inputValue) {\r\n      if (inputValue) {\r\n        places(inputValue, (data) => {\r\n          if(!_.isEmpty(data)){\r\n            const dataSource = data.map((place) => {\r\n              return ({\r\n                label: place.description,\r\n                value: place.place_id,\r\n              })\r\n            });\r\n            this.setState({\r\n              dataSource\r\n            })\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({\r\n          dataSource: [],\r\n        });\r\n      }\r\n      this.setState({\r\n        inputValue,\r\n      })\r\n\r\n      if(!this.props.setWholeAddressAsValue) {\r\n        this.props.setValue(inputValue);\r\n      }\r\n    }\r\n\r\n\r\n    onNewRequest(e, chosenRequest){\r\n      if (chosenRequest) {\r\n        const placeId = chosenRequest.value;\r\n        getPlaces(placeId, (data) => {\r\n          this.props.onSelect(data);\r\n          if(this.props.setWholeAddressAsValue){\r\n            this.props.setValue(data);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    onFocus = () => {\r\n      this.setState({\r\n        isFocused: true,\r\n      })\r\n    }\r\n\r\n    onBlur = () => {\r\n      this.setState({\r\n        isFocused: false,\r\n      })\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className={classNames('predictions__container', this.props.className)}>\r\n            <i class=\"fas fa-search\"></i>\r\n            <AutoComplete\r\n              className={classNames({ 'box-view': this.props.boxView, 'focused': this.state.isFocused, 'has-value': _.size(this.state.inputValue) > 0 }, 'AddressLane1', this.props.className )}\r\n              onChange={this.onNewRequest}\r\n              onInputChange={this.handleChange}\r\n              filterOptions={(options, params) => {\r\n              return options;\r\n          }}\r\n          value={{ label: this.state.inputValue }}\r\n          options={this.state.dataSource}\r\n          getOptionLabel={(option) => {\r\n            return option.label;\r\n          }}\r\n          renderInput={(params) => (\r\n            <TextField key={this.state.index} defaultValue={this.props.defaultValue} {...params}  label={this.props.label} />\r\n          )}\r\n        />\r\n              \r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\nPrediction.defaultProps = {\r\n  placeholder: 'Address Lane 1',\r\n  onSelect: _.noop,\r\n  restrictLabel: true,\r\n};\r\n\r\n\r\nexport default {\r\n  input: CustomFormHOC(Prediction),\r\n  formInput: withFormsy(Prediction),\r\n};\r\n\r\n// <AutoComplete\r\n//                 hintText={this.props.placeholder}\r\n//                 searchText={this.state.inputValue}\r\n//                 onUpdateInput = {t} \r\n//                 filter = {AutoComplete.noFilter} \r\n//                 onFocus={this.onFocus}\r\n//                 onBlur={this.onBlur}\r\n//                 dataSource={this.state.dataSource}\r\n//                 onNewRequest={this.onNewRequest}\r\n//                 required={this.props.required}\r\n//                 fullWidth\r\n//                 renderInput={(params) => (\r\n//                   <TextField {...params} label={this.props.label}/>\r\n//                 )}\r\n//               />","D:\\lak\\globaldart\\src\\web-bricks\\lib\\date.js",["304","305","306","307","308","309"],"import moment from 'moment';\r\nimport _ from 'lodash';\r\nimport { RRule, RRuleSet, rrulestr } from 'rrule'\r\n\r\nconst formatLabel = (date) => moment(date).format(\"MMM D, YYYY\");\r\n\r\nconst getYear = (date) => moment(date).year();\r\n\r\nconst getMonth = (date) => moment(date).month();\r\n\r\nconst getDay = (date) => moment(date).date();\r\n\r\nconst getShortMonth = (date) => moment(date).format(\"MMM\");\r\n\r\nconst getTodayDay = (date) => moment(date).day();\r\n\r\nconst formatMultiDates = ({ from, to }, seperator = '-') => {\r\n\r\n    const getTemplate = (fromDate, toDate) => `${fromDate} ${seperator} ${toDate}`;\r\n    // if years are same display as 27 May - 21 Jun 2018\r\n    if (getYear(from) == getYear(to)) {\r\n        // if months are same display as 27 - 21 Jun 2018\r\n        if (getMonth(from) == getMonth(to)) {\r\n            if (getDay(from) == getDay(to)) {\r\n                return moment(from).format(\"D MMM, YYYY\");\r\n            }\r\n            return getTemplate(moment(from).format(\"D\"), moment(to).format(\"D MMM, YYYY\"));\r\n        }\r\n        return getTemplate(moment(from).format(\"D MMM\"), moment(to).format(\"D MMM, YYYY\"));\r\n    }\r\n    return getTemplate(moment(from).format(\"D MMM, YYYY\"), moment(to).format(\"D MMM, YYYY\"));\r\n}\r\n\r\nconst groupByDate = (list, dateKey) => {\r\n    const groups = list.reduce((maps, item) => {\r\n        const group = moment(item[dateKey]).calendar(new Date(), {\r\n            sameDay: '[Today]',\r\n            lastDay: '[Yesterday]',\r\n            lastWeek: '[Last Week]',\r\n            sameElse: 'DD/MM/YYYY'\r\n        });\r\n        if (!moment(group).isValid()) {\r\n            maps[group] = maps[group]|| [];\r\n            maps[group].push(item);\r\n        } else {\r\n            const label = moment(group, 'DD/MM/YYYY').format('MMMM YYYY');\r\n            maps[label] =  maps[label] || [];\r\n            maps[label].push(item)\r\n        } return maps}, {});\r\n    const a = _.toPairs(groups)\r\n    return a;\r\n}\r\n\r\nconst recur = (event) => {\r\n    const startDate = event.end.dateTime;\r\n    const allDate = RRule.parseString(event.recurrence[0])\r\n    allDate.dtstart = new Date(startDate);\r\n    const rule = new RRule(allDate)\r\n    const length = rule.all().length\r\n    return rule.all()[length - 1];\r\n  }\r\n    \r\nexport default {\r\n    formatLabel,\r\n    formatMultiDates,\r\n    getShortMonth,\r\n    getTodayDay,\r\n    groupByDate,\r\n    recur\r\n};","D:\\lak\\globaldart\\src\\web-bricks\\lib\\places.js",["310","311","312","313"],"import _ from 'lodash';\r\n\r\nconst placeMapping = {\r\n    address_line_1: {\r\n      addressComponent: ['flat_no'],\r\n      addressFormat: 'long_name'\r\n    },\r\n    address_line_2: {\r\n        addressComponent: ['street_number', 'route', 'neighborhood','sublocality'],\r\n        addressFormat: 'long_name',\r\n    },\r\n    city: {\r\n      addressComponent: ['locality'],\r\n      addressFormat: 'long_name'\r\n    },\r\n    state: {\r\n      addressComponent: ['administrative_area_level_1'],\r\n      addressFormat: 'short_name'\r\n    },\r\n    zip: {\r\n      addressComponent: ['postal_code'],\r\n      addressFormat: 'long_name'\r\n    },\r\n    country: {\r\n      addressComponent: ['country'],\r\n      addressFormat: 'short_name'\r\n    }\r\n};\r\n\r\nlet maps, infoWindow;\r\n\r\n// Retrives places with the places input\r\nexport function places(inputValue, cb){\r\n    const autocompleteService = new window.google.maps.places.AutocompleteService();\r\n    autocompleteService.getPlacePredictions({ input: inputValue }, cb);\r\n}\r\n\r\nexport function getPlaces(placeId, cb){\r\n    const request = {\r\n        placeId : placeId,\r\n    }\r\n    const placesService = new window.google.maps.places.PlacesService(document.createElement('div'));\r\n    placesService.getDetails(request, (response) => {\r\n        //response = getLatlng(response)\r\n        const formattedAddress = formatAddress(response);\r\n        cb(formattedAddress);\r\n    });\r\n}\r\n\r\n// function getLatlng(address) {\r\n//     var geocoder = new window.google.maps.Geocoder();\r\n//     //var address = document.getElementById('textboxid').value;\r\n  \r\n//     geocoder.geocode({\r\n//       'address': address\r\n//     }, function(results, status) {\r\n  \r\n//       if (status === window.google.maps.GeocoderStatus.OK) {\r\n//         var latitude = results[0].geometry.location.lat();\r\n//         var longitude = results[0].geometry.location.lng();\r\n//       }\r\n//     });\r\n//   }\r\n\r\nfunction formatAddress(response){\r\n    const result = {};\r\n    _.each(placeMapping, (component, name) => {\r\n        response.address_components.forEach((address) => {\r\n            if (!_.isEmpty(_.intersection(address.types, component.addressComponent))) {\r\n                if (result[name]) {\r\n                    result[name] = `${(result[name])}, ${address[component.addressFormat]}`;\r\n                } else {\r\n                    result[name] = address[component.addressFormat];\r\n                }\r\n            }\r\n        })\r\n    })\r\n    return result;\r\n}\r\n\r\n\r\n\r\nexport function getAddressByCurrentLocation(onSuccess,onError){\r\n    const geocoder = new window.google.maps.Geocoder;\r\n    const geolocation = navigator.geolocation;\r\n    geolocation.getCurrentPosition((position) => {\r\n        const latlng = { lat: position.coords.latitude, lng: position.coords.longitude };\r\n        getAddress(geocoder,latlng,onSuccess,onError);\r\n    }, onError);\r\n}\r\n\r\nexport function getAddressByLatLng(lat, lng, onSuccess){\r\n    const geocoder = new window.google.maps.Geocoder;\r\n        geocoder.geocode({'location': {lat: lat, lng : lng}}, function(results, status) {\r\n            if(status === 'OK'){\r\n                if(results[0]){\r\n                    const formatedAddress = formatAddress(results[0]);\r\n                    formatedAddress.lat = lat\r\n                    formatedAddress.lng = lng\r\n                    onSuccess(formatedAddress);\r\n                }\r\n            }\r\n        })  \r\n    }\r\n\r\nfunction getAddress(geocoder, latlng, onSuccess, onError){\r\n        geocoder.geocode({'location': latlng}, function(results, status) {\r\n            if(status === 'OK'){\r\n                if(results[0]){\r\n                    let formatedAddress = formatAddress(results[0]);\r\n                    formatedAddress.lat = latlng.lat\r\n                    formatedAddress.lng = latlng.lng\r\n                    onSuccess(formatedAddress, latlng, results[0].formatted_address);\r\n                }\r\n            }\r\n    }, onError);\r\n}\r\n\r\n\r\n// This function is called when the user clicks the UI button requesting\r\n// a geocode of a place ID.\r\nfunction geocodePlaceId(geocoder, map, infowindow) {\r\n    var placeId = document.getElementById('place-id').value;\r\n    geocoder.geocode({'placeId': placeId}, function(results, status) {\r\n        if (status === 'OK') {\r\n            if (results[0]) {\r\n                map.setZoom(11);\r\n                map.setCenter(results[0].geometry.location);\r\n                var marker = new window.google.maps.Marker({\r\n                map: map,\r\n                position: results[0].geometry.location\r\n                });\r\n                infowindow.setContent(results[0].formatted_address);\r\n                infowindow.open(map, marker);\r\n            } else {\r\n                window.alert('No results found');\r\n            }\r\n        } else {\r\n            window.alert('Geocoder failed due to: ' + status);\r\n        }\r\n    });\r\n\r\n\r\n    function initMap() {\r\n    maps = new window.google.maps.Map(document.getElementById(\"map\"), {\r\n        center: { lat: -34.397, lng: 150.644 },\r\n        zoom: 6,\r\n    });\r\n    infoWindow = new window.google.maps.InfoWindow();\r\n    const locationButton = document.createElement(\"button\");\r\n    locationButton.textContent = \"Pan to Current Location\";\r\n    locationButton.classList.add(\"custom-map-control-button\");\r\n    maps.controls[window.google.maps.ControlPosition.TOP_CENTER].push(locationButton);\r\n    locationButton.addEventListener(\"click\", () => {\r\n        // Try HTML5 geolocation.\r\n        if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(\r\n            (position) => {\r\n            const pos = {\r\n                lat: position.coords.latitude,\r\n                lng: position.coords.longitude,\r\n            };\r\n            infoWindow.setPosition(pos);\r\n            infoWindow.setContent(\"Location found.\");\r\n            infoWindow.open(maps);\r\n            maps.setCenter(pos);\r\n            },\r\n            () => {\r\n            handleLocationError(true, infoWindow, maps.getCenter());\r\n            }\r\n        );\r\n        } else {\r\n        // Browser doesn't support Geolocation\r\n        handleLocationError(false, infoWindow, maps.getCenter());\r\n        }\r\n    });\r\n    }\r\n\r\n    function handleLocationError(browserHasGeolocation, infoWindow, pos) {\r\n    infoWindow.setPosition(pos);\r\n    infoWindow.setContent(\r\n        browserHasGeolocation\r\n        ? \"Error: The Geolocation service failed.\"\r\n        : \"Error: Your browser doesn't support geolocation.\"\r\n    );\r\n    infoWindow.open(map);\r\n    }\r\n}\r\n\r\n\r\nexport default { getAddressByCurrentLocation, places, getPlaces, geocodePlaceId };\r\n","D:\\lak\\globaldart\\src\\web-bricks\\Shared\\table\\dataGrid.js",[],{"ruleId":"314","replacedBy":"315"},{"ruleId":"316","replacedBy":"317"},{"ruleId":"318","severity":1,"message":"319","line":1,"column":17,"nodeType":"320","messageId":"321","endLine":1,"endColumn":25},{"ruleId":"318","severity":1,"message":"322","line":2,"column":8,"nodeType":"320","messageId":"321","endLine":2,"endColumn":12},{"ruleId":"323","severity":1,"message":"324","line":61,"column":25,"nodeType":"325","endLine":61,"endColumn":80},{"ruleId":"318","severity":1,"message":"319","line":1,"column":17,"nodeType":"320","messageId":"321","endLine":1,"endColumn":25},{"ruleId":"318","severity":1,"message":"322","line":2,"column":8,"nodeType":"320","messageId":"321","endLine":2,"endColumn":12},{"ruleId":"323","severity":1,"message":"324","line":61,"column":25,"nodeType":"325","endLine":61,"endColumn":80},{"ruleId":"323","severity":1,"message":"324","line":49,"column":21,"nodeType":"325","endLine":49,"endColumn":84},{"ruleId":"318","severity":1,"message":"319","line":1,"column":17,"nodeType":"320","messageId":"321","endLine":1,"endColumn":25},{"ruleId":"318","severity":1,"message":"326","line":6,"column":8,"nodeType":"320","messageId":"321","endLine":6,"endColumn":21},{"ruleId":"318","severity":1,"message":"327","line":16,"column":43,"nodeType":"320","messageId":"321","endLine":16,"endColumn":53},{"ruleId":"318","severity":1,"message":"328","line":16,"column":55,"nodeType":"320","messageId":"321","endLine":16,"endColumn":65},{"ruleId":"318","severity":1,"message":"329","line":137,"column":7,"nodeType":"320","messageId":"321","endLine":137,"endColumn":17},{"ruleId":"318","severity":1,"message":"330","line":146,"column":7,"nodeType":"320","messageId":"321","endLine":146,"endColumn":21},{"ruleId":"323","severity":1,"message":"324","line":338,"column":41,"nodeType":"325","endLine":338,"endColumn":92},{"ruleId":"323","severity":1,"message":"324","line":435,"column":53,"nodeType":"325","endLine":435,"endColumn":119},{"ruleId":"323","severity":1,"message":"324","line":437,"column":53,"nodeType":"325","endLine":437,"endColumn":120},{"ruleId":"331","severity":1,"message":"332","line":440,"column":116,"nodeType":"333","endLine":440,"endColumn":135},{"ruleId":"334","severity":1,"message":"335","line":496,"column":37,"nodeType":"325","endLine":499,"endColumn":38},{"ruleId":"334","severity":1,"message":"335","line":502,"column":37,"nodeType":"325","endLine":505,"endColumn":38},{"ruleId":"334","severity":1,"message":"335","line":508,"column":37,"nodeType":"325","endLine":511,"endColumn":38},{"ruleId":"318","severity":1,"message":"336","line":2,"column":8,"nodeType":"320","messageId":"321","endLine":2,"endColumn":14},{"ruleId":"318","severity":1,"message":"337","line":3,"column":8,"nodeType":"320","messageId":"321","endLine":3,"endColumn":20},{"ruleId":"338","severity":1,"message":"339","line":8,"column":17,"nodeType":"325","endLine":9,"endColumn":170},{"ruleId":"318","severity":1,"message":"340","line":2,"column":8,"nodeType":"320","messageId":"321","endLine":2,"endColumn":17},{"ruleId":"318","severity":1,"message":"341","line":3,"column":10,"nodeType":"320","messageId":"321","endLine":3,"endColumn":20},{"ruleId":"318","severity":1,"message":"342","line":3,"column":22,"nodeType":"320","messageId":"321","endLine":3,"endColumn":28},{"ruleId":"318","severity":1,"message":"343","line":4,"column":8,"nodeType":"320","messageId":"321","endLine":4,"endColumn":19},{"ruleId":"318","severity":1,"message":"344","line":5,"column":8,"nodeType":"320","messageId":"321","endLine":5,"endColumn":14},{"ruleId":"318","severity":1,"message":"345","line":6,"column":8,"nodeType":"320","messageId":"321","endLine":6,"endColumn":16},{"ruleId":"318","severity":1,"message":"346","line":7,"column":10,"nodeType":"320","messageId":"321","endLine":7,"endColumn":18},{"ruleId":"318","severity":1,"message":"347","line":8,"column":8,"nodeType":"320","messageId":"321","endLine":8,"endColumn":24},{"ruleId":"318","severity":1,"message":"348","line":5,"column":11,"nodeType":"320","messageId":"321","endLine":5,"endColumn":14},{"ruleId":"349","severity":1,"message":"350","line":177,"column":30,"nodeType":"351","messageId":"352","endLine":177,"endColumn":32},{"ruleId":"353","severity":1,"message":"354","line":1,"column":1,"nodeType":"355","endLine":5,"endColumn":2},{"ruleId":"356","severity":1,"message":"357","line":39,"column":13,"nodeType":"358","messageId":"359","endLine":41,"endColumn":59},{"ruleId":"318","severity":1,"message":"360","line":7,"column":10,"nodeType":"320","messageId":"321","endLine":7,"endColumn":15},{"ruleId":"353","severity":1,"message":"354","line":80,"column":1,"nodeType":"355","endLine":83,"endColumn":3},{"ruleId":"353","severity":1,"message":"354","line":79,"column":1,"nodeType":"355","endLine":82,"endColumn":3},{"ruleId":"353","severity":1,"message":"354","line":39,"column":1,"nodeType":"355","endLine":42,"endColumn":3},{"ruleId":"331","severity":1,"message":"332","line":33,"column":29,"nodeType":"333","endLine":33,"endColumn":46},{"ruleId":"318","severity":1,"message":"361","line":5,"column":10,"nodeType":"320","messageId":"321","endLine":5,"endColumn":20},{"ruleId":"353","severity":1,"message":"354","line":60,"column":1,"nodeType":"355","endLine":63,"endColumn":3},{"ruleId":"318","severity":1,"message":"362","line":6,"column":10,"nodeType":"320","messageId":"321","endLine":6,"endColumn":21},{"ruleId":"318","severity":1,"message":"363","line":14,"column":7,"nodeType":"320","messageId":"321","endLine":14,"endColumn":16},{"ruleId":"314","replacedBy":"364"},{"ruleId":"316","replacedBy":"365"},{"ruleId":"353","severity":1,"message":"366","line":4,"column":1,"nodeType":"355","endLine":41,"endColumn":3},{"ruleId":"318","severity":1,"message":"346","line":2,"column":10,"nodeType":"320","messageId":"321","endLine":2,"endColumn":18},{"ruleId":"318","severity":1,"message":"344","line":6,"column":8,"nodeType":"320","messageId":"321","endLine":6,"endColumn":14},{"ruleId":"318","severity":1,"message":"367","line":7,"column":8,"nodeType":"320","messageId":"321","endLine":7,"endColumn":23},{"ruleId":"318","severity":1,"message":"368","line":8,"column":8,"nodeType":"320","messageId":"321","endLine":8,"endColumn":19},{"ruleId":"369","severity":1,"message":"370","line":45,"column":17,"nodeType":"325","endLine":45,"endColumn":268},{"ruleId":"331","severity":1,"message":"332","line":45,"column":241,"nodeType":"333","endLine":45,"endColumn":265},{"ruleId":"318","severity":1,"message":"371","line":4,"column":16,"nodeType":"320","messageId":"321","endLine":4,"endColumn":32},{"ruleId":"318","severity":1,"message":"372","line":13,"column":7,"nodeType":"320","messageId":"321","endLine":13,"endColumn":19},{"ruleId":"373","severity":1,"message":"374","line":1,"column":1,"nodeType":"375","messageId":"376","endLine":1,"endColumn":13,"fix":"377"},{"ruleId":"318","severity":1,"message":"371","line":6,"column":10,"nodeType":"320","messageId":"321","endLine":6,"endColumn":26},{"ruleId":"378","severity":1,"message":"379","line":9,"column":5,"nodeType":"380","messageId":"381","endLine":11,"endColumn":6},{"ruleId":"318","severity":1,"message":"382","line":2,"column":8,"nodeType":"320","messageId":"321","endLine":2,"endColumn":9},{"ruleId":"318","severity":1,"message":"382","line":2,"column":8,"nodeType":"320","messageId":"321","endLine":2,"endColumn":9},{"ruleId":"353","severity":1,"message":"354","line":43,"column":1,"nodeType":"355","endLine":46,"endColumn":2},{"ruleId":"318","severity":1,"message":"383","line":6,"column":20,"nodeType":"320","messageId":"321","endLine":6,"endColumn":27},{"ruleId":"334","severity":1,"message":"335","line":62,"column":25,"nodeType":"325","endLine":62,"endColumn":107},{"ruleId":"318","severity":1,"message":"384","line":5,"column":8,"nodeType":"320","messageId":"321","endLine":5,"endColumn":18},{"ruleId":"331","severity":1,"message":"332","line":28,"column":17,"nodeType":"333","endLine":28,"endColumn":39},{"ruleId":"318","severity":1,"message":"385","line":11,"column":7,"nodeType":"320","messageId":"321","endLine":11,"endColumn":13},{"ruleId":"386","severity":1,"message":"387","line":36,"column":5,"nodeType":"375","messageId":"388","endLine":41,"endColumn":8},{"ruleId":"318","severity":1,"message":"389","line":49,"column":13,"nodeType":"320","messageId":"321","endLine":49,"endColumn":20},{"ruleId":"318","severity":1,"message":"390","line":29,"column":10,"nodeType":"320","messageId":"321","endLine":29,"endColumn":13},{"ruleId":"318","severity":1,"message":"391","line":50,"column":11,"nodeType":"320","messageId":"321","endLine":50,"endColumn":18},{"ruleId":"353","severity":1,"message":"354","line":90,"column":1,"nodeType":"355","endLine":93,"endColumn":3},{"ruleId":"392","severity":1,"message":"393","line":27,"column":18,"nodeType":"394","endLine":27,"endColumn":28},{"ruleId":"353","severity":1,"message":"354","line":119,"column":1,"nodeType":"355","endLine":122,"endColumn":3},{"ruleId":"318","severity":1,"message":"395","line":3,"column":17,"nodeType":"320","messageId":"321","endLine":3,"endColumn":25},{"ruleId":"318","severity":1,"message":"396","line":3,"column":27,"nodeType":"320","messageId":"321","endLine":3,"endColumn":35},{"ruleId":"349","severity":1,"message":"397","line":21,"column":23,"nodeType":"351","messageId":"352","endLine":21,"endColumn":25},{"ruleId":"349","severity":1,"message":"397","line":23,"column":28,"nodeType":"351","messageId":"352","endLine":23,"endColumn":30},{"ruleId":"349","severity":1,"message":"397","line":24,"column":30,"nodeType":"351","messageId":"352","endLine":24,"endColumn":32},{"ruleId":"353","severity":1,"message":"354","line":63,"column":1,"nodeType":"355","endLine":70,"endColumn":3},{"ruleId":"398","severity":1,"message":"399","line":84,"column":22,"nodeType":"400","messageId":"401","endLine":84,"endColumn":53,"fix":"402"},{"ruleId":"398","severity":1,"message":"399","line":93,"column":22,"nodeType":"400","messageId":"401","endLine":93,"endColumn":53,"fix":"403"},{"ruleId":"318","severity":1,"message":"404","line":144,"column":14,"nodeType":"320","messageId":"321","endLine":144,"endColumn":21},{"ruleId":"353","severity":1,"message":"354","line":191,"column":1,"nodeType":"355","endLine":191,"endColumn":83},"no-native-reassign",["405"],"no-negated-in-lhs",["406"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Navs' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ExitToAppIcon' is defined but never used.","'ButtonBack' is defined but never used.","'ButtonNext' is defined but never used.","'pastEvents' is assigned a value but never used.","'upcomingEvents' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'styles' is defined but never used.","'sharedStyles' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'TextField' is defined but never used.","'InputLabel' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'res' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","'Label' is defined but never used.","'withStyles' is defined but never used.","'CloudUpload' is defined but never used.","'make_cols' is assigned a value but never used.",["405"],["406"],"Assign arrow function to a variable before exporting as module default","'GoogleMapPicker' is defined but never used.","'HiddenInput' is defined but never used.","react/jsx-pascal-case","Imported JSX component formInput must be in PascalCase or SCREAMING_SNAKE_CASE","'CircularProgress' is defined but never used.","'defaultProps' is assigned a value but never used.","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"407","text":"408"},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'_' is defined but never used.","'Twitter' is defined but never used.","'classNames' is defined but never used.","'styles' is assigned a value but never used.","no-unreachable","Unreachable code.","unreachableCode","'classes' is assigned a value but never used.","'map' is assigned a value but never used.","'address' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'RRuleSet' is defined but never used.","'rrulestr' is defined but never used.","Expected '===' and instead saw '=='.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"409","text":"410"},{"range":"411","text":"410"},"'initMap' is defined but never used.","no-global-assign","no-unsafe-negation",[0,12],"",[2563,2563],"()",[2946,2946]]